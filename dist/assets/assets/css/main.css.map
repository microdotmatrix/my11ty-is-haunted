{"version":3,"file":"assets/css/main.css","mappings":";;;;;;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;ACQA;AACA;AACA;AACA;ADXA;AAAA;;ACgBA;ADhBA;AAAA;;;;;AAAA;AAAA;AC2BA;AACA;AACA;AACA;AAAA;AACA;AD/BA;AAAA;;;AAAA;AAAA;ACwCA;AACA;ADzCA;AAAA;;;;AAAA;AAAA;ACmDA;AACA;AACA;ADrDA;AAAA;;AAAA;AAAA;AC6DA;AAAA;AD7DA;AAAA;;AAAA;AAAA;;;;;;AC0EA;AACA;AD3EA;AAAA;;AAAA;AAAA;ACmFA;AACA;ADpFA;AAAA;;AAAA;AAAA;;AC6FA;AD7FA;AAAA;;;AAAA;AAAA;;;;ACyGA;AACA;AD1GA;AAAA;;AAAA;AAAA;ACkHA;ADlHA;AAAA;;AAAA;AAAA;;AC2HA;AACA;AACA;AACA;AD9HA;AAAA;ACkIA;ADlIA;AAAA;ACsIA;ADtIA;AAAA;;;;AAAA;AAAA;ACgJA;AACA;AACA;ADlJA;AAAA;;;;AAAA;AAAA;;;;;ACgKA;AACA;AACA;AACA;AACA;AACA;ADrKA;AAAA;;AAAA;AAAA;;AC8KA;AD9KA;AAAA;;;AAAA;AAAA;;;;AC0LA;AACA;AACA;AD5LA;AAAA;;AAAA;AAAA;ACoMA;ADpMA;AAAA;;AAAA;AAAA;AC4MA;AD5MA;AAAA;;AAAA;AAAA;ACoNA;ADpNA;AAAA;;AAAA;AAAA;;AC6NA;AD7NA;AAAA;;;AAAA;AAAA;ACsOA;AACA;ADvOA;AAAA;;AAAA;AAAA;AC+OA;AD/OA;AAAA;;;AAAA;AAAA;ACwPA;AACA;ADzPA;AAAA;;AAAA;AAAA;ACiQA;ADjQA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;ACqRA;ADrRA;AAAA;ACyRA;AACA;AD1RA;AAAA;AC8RA;AD9RA;AAAA;;;ACoSA;AACA;AACA;ADtSA;AAAA;;AAAA;AAAA;AC8SA;AD9SA;AAAA;;;AAAA;AAAA;ACwTA;AACA;ADzTA;AAAA;ACwTA;AACA;ADzTA;AAAA;;ACwTA;AACA;ADzTA;AAAA;;AAAA;AAAA;;ACkUA;ADlUA;AAAA;;AAAA;AAAA;ACyUA;ADzUA;AAAA;;;;AAAA;AAAA;;;;;;;;AC0VA;AACA;AD3VA;AAAA;;AAAA;AAAA;;ACoWA;AACA;ADrWA;AAAA;;AAAA;AAAA;AC6WA;AD7WA;AEAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACAA;ADAA;ACAA;AAAA;ADAA;AAAA;AAAA;ACAA;AAAA;ADAA;AAAA;AAAA;ACAA;AAAA;ADAA;AAAA;AAAA;ACAA;AAAA;ADAA;AAAA;AAAA;ACAA;AAAA;ADAA;AAAA;AAAA;ACAA;ACAA;AFAA;AEAA;AAAA;AFAA;AEAA;ACwCA;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACKA;AFsBA;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACqBA;AFMA;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACqCA;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AHwGA;AGxGA;AAAA;AAAA;AAAA;AHwJA;AACA;AIpGA;AC+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AL8GA;AMpJA;AFeA;AACA;AACA;AACA;AACA;AACA;AJyIA;AACA;AO9LA;;ACyBA;AACA;AACA;AAGA;AACA;AACA;AACA;ARyKA;AOpMA;ACmBA;AACA;AACA;AAGA;AACA;AACA;AACA;ARqLA;AOzMA;ACkDA;AACA;AACA;AACA;AR2JA;AOhNA;ACkDA;AACA;AACA;AACA;ARkKA;AOvNA;ACkDA;AACA;AACA;AACA;ARyKA;AO9NA;ACkDA;AACA;AACA;AACA;ARgLA;AOrOA;ACkDA;AACA;AACA;AACA;ARuLA;AO5OA;ACkDA;AACA;AACA;AACA;AR8LA;AOnPA;ACkDA;AACA;AACA;AACA;ARqMA;AO1PA;ACkDA;AACA;AACA;AACA;AR4MA;AOjQA;ACkDA;AACA;AACA;AACA;ARmNA;AOxQA;ACkDA;AACA;AACA;AACA;AR0NA;AO/QA;ACkDA;AACA;AACA;AACA;ARiOA;AOtRA;ACkDA;AACA;AACA;AACA;ARwOA;AM1QA;ACZA;AC2CA;AACA;AACA;AACA;ARgPA;AO9RA;AC2CA;AACA;AACA;AACA;ARwPA;AOtSA;AC2CA;AACA;AACA;AACA;ARgQA;AO9SA;AC2CA;AACA;AACA;AACA;ARwQA;AOtTA;AC2CA;AACA;AACA;AACA;ARgRA;AO9TA;AC2CA;AACA;AACA;AACA;ARwRA;AOtUA;AC2CA;AACA;AACA;AACA;ARgSA;AO9UA;AC2CA;AACA;AACA;AACA;ARwSA;AOtVA;AC2CA;AACA;AACA;AACA;ARgTA;AO9VA;AC2CA;AACA;AACA;AACA;ARwTA;AOtWA;AC2CA;AACA;AACA;AACA;ARgUA;AO9WA;AC2CA;AACA;AACA;AACA;ARwUA;AAvFA;AOzRA;AC6CA;AACA;AACA;AACA;AACA;ARuUA;AOnXA;AACA;APsXA;AOvXA;AACA;AP0XA;AO3XA;AACA;AP8XA;AO/XA;AACA;APkYA;AOnYA;AACA;APsYA;AOvYA;AACA;AP0YA;AO3YA;AACA;AP8YA;AO/YA;AACA;APkZA;AOnZA;AACA;APsZA;AOvZA;AACA;AP0ZA;AO3ZA;AACA;AP8ZA;AO/ZA;AACA;APkaA;AOrZA;AACA;AACA;AACA;AACA;APwZA;AOrZA;AACA;APwZA;AOlZA;AACA;APqZA;AO/YA;AACA;APkZA;AMrbA;ACkCA;AAGA;APoZA;AACA;AMtdA;AC8DA;AAMA;APsZA;AACA;AO7ZA;AACA;APgaA;AMncA;ACkCA;AAGA;APkaA;AACA;AMpeA;AC8DA;AAMA;APoaA;AACA;AO3aA;AACA;AP8aA;AMjdA;ACkCA;AAGA;APgbA;AACA;AMlfA;AC8DA;AAMA;APkbA;AACA;AOzbA;AACA;AP4bA;AM/dA;ACkCA;AAGA;AP8bA;AACA;AMhgBA;AC8DA;AAMA;APgcA;AACA;AOvcA;AACA;AP0cA;AM7eA;ACkCA;AAGA;AP4cA;AACA;AM9gBA;AC8DA;AAMA;AP8cA;AACA;AOrdA;AACA;APwdA;AM3fA;ACkCA;AAGA;AP0dA;AACA;AM5hBA;AC8DA;AAMA;AP4dA;AACA;AOtdA;AACA;AACA;APydA;AM1gBA;AC+CA;AAIA;AP2dA;AACA;AM3iBA;AC2EA;AAOA;AP6dA;AACA;AOreA;AACA;AACA;APweA;AMzhBA;AC+CA;AAIA;AP0eA;AACA;AM1jBA;AC2EA;AAOA;AP4eA;AACA;AOpfA;AACA;AACA;APufA;AMxiBA;AC+CA;AAIA;APyfA;AACA;AMzkBA;AC2EA;AAOA;AP2fA;AACA;AOngBA;AACA;AACA;APsgBA;AMvjBA;AC+CA;AAIA;APwgBA;AACA;AMxlBA;AC2EA;AAOA;AP0gBA;AACA;AOlhBA;AACA;AACA;APqhBA;AMtkBA;AC+CA;AAIA;APuhBA;AACA;AMvmBA;AC2EA;AAOA;APyhBA;AACA;AOjiBA;AACA;AACA;APoiBA;AMrlBA;AC+CA;AAIA;APsiBA;AACA;AMtnBA;AC2EA;AAOA;APwiBA;AACA;AOliBA;AACA;AACA;APqiBA;AMpmBA;AC6DA;AAIA;APuiBA;AACA;AMroBA;ACyFA;AAOA;APyiBA;AACA;AOjjBA;AACA;AACA;APojBA;AMnnBA;AC6DA;AAIA;APsjBA;AACA;AMppBA;ACyFA;AAOA;APwjBA;AACA;AOhkBA;AACA;AACA;APmkBA;AMloBA;AC6DA;AAIA;APqkBA;AACA;AMnqBA;ACyFA;AAOA;APukBA;AACA;AO/kBA;AACA;AACA;APklBA;AMjpBA;AC6DA;AAIA;APolBA;AACA;AMlrBA;ACyFA;AAOA;APslBA;AACA;AO9lBA;AACA;AACA;APimBA;AMhqBA;AC6DA;AAIA;APmmBA;AACA;AMjsBA;ACyFA;AAOA;APqmBA;AACA;AO7mBA;AACA;AACA;APgnBA;AM/qBA;AC6DA;AAIA;APknBA;AACA;AMhtBA;ACyFA;AAOA;APonBA;AACA;AO9mBA;AACA;AACA;APinBA;AM9rBA;AC2EA;AAIA;APmnBA;AACA;AM/tBA;ACuGA;AAOA;APqnBA;AACA;AO7nBA;AACA;AACA;APgoBA;AM7sBA;AC2EA;AAIA;APkoBA;AACA;AM9uBA;ACuGA;AAOA;APooBA;AACA;AO5oBA;AACA;AACA;AP+oBA;AM5tBA;AC2EA;AAIA;APipBA;AACA;AM7vBA;ACuGA;AAOA;APmpBA;AACA;AO3pBA;AACA;AACA;AP8pBA;AM3uBA;AC2EA;AAIA;APgqBA;AACA;AM5wBA;ACuGA;AAOA;APkqBA;AACA;AO1qBA;AACA;AACA;AP6qBA;AM1vBA;AC2EA;AAIA;AP+qBA;AACA;AM3xBA;ACuGA;AAOA;APirBA;AACA;AOzrBA;AACA;AACA;AP4rBA;AMzwBA;AC2EA;AAIA;AP8rBA;AACA;AM1yBA;ACuGA;AAOA;APgsBA;AACA;AO5rBA;AACA;AP+rBA;AO5rBA;AACA;AP+rBA;AO5rBA;AACA;AP+rBA;AS70BA;AACA;AACA;ATg1BA;AS90BA;AACA;ATg1BA;AS90BA;AACA;ATg1BA;AACA;ASz1BA;AACA;AACA;ATg1BA;AS90BA;AACA;ATg1BA;AS90BA;AACA;ATg1BA;AACA;AS70BA;AACA;AACA;AT+0BA;AS70BA;AACA;AT+0BA;AACA;ASr1BA;AACA;AACA;AT+0BA;AS70BA;AACA;AT+0BA;AACA;AS50BA;AACA;AACA;AT80BA;AS50BA;AACA;AT80BA;AS50BA;AACA;AT80BA;AACA;ASv1BA;AACA;AACA;AT80BA;AS50BA;AACA;AT80BA;AS50BA;AACA;AT80BA;AACA;AS30BA;AACA;AACA;AAAA;AT60BA;AS30BA;AACA;AAAA;AT60BA;AS30BA;AACA;AAAA;AT60BA;AACA;ASt1BA;AACA;AACA;AAAA;AT60BA;AS30BA;AACA;AAAA;AT60BA;AS30BA;AACA;AAAA;AT60BA;AACA;ASv0BA;AACA;AACA;AACA;AACA;ATy0BA;ASv0BA;AACA;AACA;AACA;ATy0BA;ASv0BA;AACA;AACA;AACA;ATy0BA;ASv0BA;AACA;AACA;AACA;ATy0BA;AACA;AS71BA;AACA;AACA;AACA;AACA;ATy0BA;ASv0BA;AACA;AACA;AACA;ATy0BA;ASv0BA;AACA;AACA;AACA;ATy0BA;ASv0BA;AACA;AACA;AACA;ATy0BA;AACA;ASt0BA;AACA;AACA;AACA;AACA;ATw0BA;ASt0BA;AACA;AACA;AACA;ATw0BA;ASt0BA;AACA;AACA;AACA;ATw0BA;ASt0BA;AACA;AACA;AACA;ATw0BA;AACA;AS51BA;AACA;AACA;AACA;AACA;ATw0BA;ASt0BA;AACA;AACA;AACA;ATw0BA;ASt0BA;AACA;AACA;AACA;ATw0BA;ASt0BA;AACA;AACA;AACA;ATw0BA;AACA;ASr0BA;AACA;AACA;AACA;ATu0BA;ASr0BA;AACA;AACA;AACA;ATu0BA;ASr0BA;AACA;AACA;AACA;ATu0BA;ASr0BA;AACA;AACA;ATu0BA;AACA;ASz1BA;AACA;AACA;AACA;ATu0BA;ASr0BA;AACA;AACA;AACA;ATu0BA;ASr0BA;AACA;AACA;AACA;ATu0BA;ASr0BA;AACA;AACA;ATu0BA;AACA;ASp0BA;AACA;AACA;AACA;ATs0BA;ASp0BA;AACA;AACA;ATs0BA;ASp0BA;AACA;AACA;ATs0BA;ASp0BA;AACA;AACA;ATs0BA;AACA;ASt1BA;AACA;AACA;AACA;ATs0BA;ASp0BA;AACA;AACA;ATs0BA;ASp0BA;AACA;AACA;ATs0BA;ASp0BA;AACA;AACA;ATs0BA;AACA;AUz8BA;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AV28BA;AUx8BA;AACA;AV28BA;AUx8BA;AACA;AACA;AACA;AV28BA;AUx8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AV28BA;AWj/BA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AXo/BA;AACA;AWj/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AXm/BA;AWh/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AhBhCA;AAAA;AAAA;AAAA;AAAA;AKohCA;AWh/BA;;;;AAIA;AACA;AXm/BA;AWh/BA;AACA;AACA;AACA;AACA;AACA;AXm/BA;AWl/BA;AAEA;AACA;AACA;AXm/BA;ALziCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AkBIA;AlBJA;AkBMA;AFwDA;AEvDA;Ab+iCA;AACA;AajjCA;AFwDA;AEvDA;AbojCA;AACA;AatjCA;AFwDA;AEvDA;AbyjCA;AACA;Aa3jCA;AFwDA;AEvDA;Ab8jCA;AACA;ActkCA;AACA;AACA;AACA;AdykCA;ActkCA;AACA;AACA;AdykCA;AejlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AfolCA;AgBhkCA;ADlBA;AfqlCA;AejlCA;AACA;AACA;AACA;AACA;AfolCA;AejlCA;AACA;AACA;AACA;AfolCA;AejlCA;AACA;AACA;AfolCA;AejlCA;AACA;AACA;AfolCA;AejlCA;AACA;AACA;AfolCA;AejlCA;AACA;AfolCA;AejlCA;AACA;AfolCA;AejlCA;;AAEA;AACA;AACA;AfolCA;AejlCA;AACA;AACA;AACA;AfolCA;AiBpnCA;AFkCA;AfqlCA;AejlCA;AACA;AfolCA;AkBtpCA;AACA;AlBypCA;AL1pCA;AAAA;AAAA;AAAA;AAAA;AwBGA;AACA;ADGA;AvBPA;AuBQA;AACA;AlB2pCA;ALpqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AuBgBA;AAAA;AlB2pCA;AkB1pCA;AAAA;AlB8pCA;AkB7pCA;AAAA;AlBiqCA;AkBhqCA;AAAA;AlBoqCA;AkBnqCA;AAAA;AlBuqCA;AkBtqCA;AAAA;AlB0qCA;AkBzqCA;AAAA;AlB6qCA;AkB5qCA;AAAA;AlBgrCA;AkB/qCA;AAAA;AlBmrCA;AkBlrCA;AAAA;AlBsrCA;AkBrrCA;AAAA;AlByrCA;ALntCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AyBOA;AACA;AACA;ApBwtCA;AoBvtCA;AACA;ApBytCA;ALpuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AyBsBA;AACA;AACA;AACA;ApBytCA;ALlvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A2BEA;A3BFA;AAAA;AAAA;AAAA;AAAA;AAAA;AkBIA;AlBJA;AkBMA;ASHA;ATIA;AbwvCA;AACA;Aa1vCA;ASHA;ATIA;Ab6vCA;AACA;Aa/vCA;ASHA;ATIA;AbkwCA;AACA;AapwCA;ASHA;ATIA;AbuwCA;AACA;AL/wCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A2BYA;AACA;AtB2wCA;ALxxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A2BmBA;AACA;AACA;AtB6wCA;ALlyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A4BEA;AACA;A5BHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A4BSA;AACA;AACA;A5BXA;AAAA;AAAA;AAAA","sources":["webpack://eleventy-starter-ghost/./node_modules/tailwindcss/base.css","webpack://eleventy-starter-ghost/./src/assets/scss/%3Cinput%20css%20EG3Kbp%3E","webpack://eleventy-starter-ghost/<no source>","webpack://eleventy-starter-ghost/./node_modules/tailwindcss/components.css","webpack://eleventy-starter-ghost/./node_modules/tailwindcss/utilities.css","webpack://eleventy-starter-ghost/./node_modules/gorko/src/generator/workers/_generate-css-vars.scss","webpack://eleventy-starter-ghost/./node_modules/gorko/src/generator/workers/_process-vars.scss","webpack://eleventy-starter-ghost/./src/assets/scss/main.scss","webpack://eleventy-starter-ghost/./node_modules/open-props/gradients.min.css","webpack://eleventy-starter-ghost/./node_modules/open-props/borders.min.css","webpack://eleventy-starter-ghost/./node_modules/open-props/shadows.min.css","webpack://eleventy-starter-ghost/./src/assets/scss/toolkit/_fluid-sizes.scss","webpack://eleventy-starter-ghost/./node_modules/accoutrement/sass/vars/_vars.scss","webpack://eleventy-starter-ghost/./node_modules/gerillass/scss/library/_breakpoint.scss","webpack://eleventy-starter-ghost/./src/assets/scss/utilities/_layout.scss","webpack://eleventy-starter-ghost/./src/assets/scss/toolkit/_flex-grid.scss","webpack://eleventy-starter-ghost/./src/assets/scss/utilities/_animations.scss","webpack://eleventy-starter-ghost/./src/assets/scss/utilities/_classes.scss","webpack://eleventy-starter-ghost/./src/assets/scss/components/_global.scss","webpack://eleventy-starter-ghost/./src/assets/scss/_config.scss","webpack://eleventy-starter-ghost/./node_modules/gerillass/scss/library/_adaptive.scss","webpack://eleventy-starter-ghost/./src/assets/scss/components/_media.scss","webpack://eleventy-starter-ghost/./src/assets/scss/components/_typography.scss","webpack://eleventy-starter-ghost/./node_modules/gerillass/scss/library/_only.scss","webpack://eleventy-starter-ghost/./node_modules/gerillass/scss/library/_except.scss","webpack://eleventy-starter-ghost/./src/assets/scss/components/_icons.scss","webpack://eleventy-starter-ghost/./node_modules/gerillass/scss/library/_sizer.scss","webpack://eleventy-starter-ghost/./src/assets/scss/components/_header.scss","webpack://eleventy-starter-ghost/./node_modules/nord/src/sass/nord.scss","webpack://eleventy-starter-ghost/./src/assets/scss/components/_footer.scss","webpack://eleventy-starter-ghost/./src/assets/scss/views/_index.scss"],"sourcesContent":["@tailwind base;\n","/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: theme('borderColor.DEFAULT', currentColor); /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  tab-size: 4; /* 3 */\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"); /* 4 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace); /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: theme('colors.gray.400', #9ca3af); /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/*\nEnsure the default browser behavior of the `hidden` attribute.\n*/\n\n[hidden] {\n  display: none;\n}\n",null,"@tailwind components;\n","@tailwind utilities;\n","@import 'process-vars';\n\n/// GENERATE CSS VARS MIXIN\n/// Will either generate a simple collection of CSS Custom Properties\n/// or if `themes` are defined, it’ll loop each theme and generate Custom Properties\n///\n/// @param {map} $vars - A collection of keys and values\n///\n@mixin generate-css-vars($vars) {\n  @if ($vars) {\n    /// First, we look for themes to see if we need to do extra work\n    $themes: map-get($vars, 'themes');\n\n    /// Still generate the custom properties but remove the themes from the $vars\n    /// so we don't confuse the generator\n    :root {\n      @include process-vars(map-remove($vars, 'themes'));\n    }\n\n    @if ($themes) {\n      @each $name, $theme in $themes {\n        $prefix: map-get($theme, 'prefix');\n        $tokens: map-get($theme, 'tokens');\n        $prefers-color-scheme: map-get($theme, 'prefers-color-scheme');\n\n        /// A theme can be defined without a prefix, but we need one to create\n        /// a valid CSS rule, so we’ll set it as :root\n        @if not($prefix) {\n          $prefix: ':root';\n        }\n\n        /// If a prefers-color-scheme is set, that needs to be a media query\n        @if ($prefers-color-scheme) {\n          @media (prefers-color-scheme: #{$prefers-color-scheme}) {\n            #{$prefix} {\n              @include process-vars($tokens);\n            }\n          }\n        } @else {\n          /// If not, we can generate the vars within the prefix only instead\n          #{$prefix} {\n            @include process-vars($tokens);\n          }\n        }\n      }\n    } @else {\n      /// No themes, so just generate custom properties for each CSS var\n      :root {\n        @include process-vars($vars);\n      }\n    }\n  }\n}\n","/// PROCESS VARS MIXIN\n/// A reusable looper that generates custom property rules\n///\n/// @param {map} $passed-vars - A collection of keys and values\n///\n@import 'get-namespace';\n\n@mixin process-vars($passed-vars) {\n\n  $namespace: get-namespace('css-vars');\n\n  @each $var, $items in $passed-vars {\n    @each $key, $value in $items {\n      --#{$namespace + $var + '-' + $key}: #{$value};\n    }\n  }\n}\n","@import url(\"https://fonts.googleapis.com/css2?family=Barlow:wght@200;300;400;500;600&family=Genos:wght@200;300;400;500;600;700&family=Kanit:wght@200;300;400;500;600&display=swap\");\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n:root {\n  --color-primary: #1a1a1a;\n  --color-secondary: #f3f3f3;\n  --color-text: #212529;\n  --color-body: #FCFEFF;\n  --color-background: linear-gradient(to right, #d7d2cc 0%, #304352 100%);\n  --color-heading: #434C5E;\n  --color-subheading: #727C8B;\n  --color-accent: #8FBCBB;\n  --color-descent: #4C566A;\n  --color-mid: #727C8B;\n  --color-alt: #adb5bd;\n  --color-link: #343a40;\n  --color-link-hover: #546071;\n}\n\n.theme-light {\n  --color-primary: #1a1a1a;\n  --color-secondary: #f3f3f3;\n  --color-text: #212529;\n  --color-body: #FCFEFF;\n  --color-background: linear-gradient(to right, #d7d2cc 0%, #304352 100%);\n  --color-heading: #434C5E;\n  --color-subheading: #727C8B;\n  --color-accent: #8FBCBB;\n  --color-descent: #4C566A;\n  --color-mid: #727C8B;\n  --color-alt: #adb5bd;\n  --color-link: #343a40;\n  --color-link-hover: #546071;\n}\n\ntheme-dark {\n  --color-primary: #E7F1FA;\n  --color-secondary: #040405;\n  --color-text: #f1f3f5;\n  --color-body: #09090B;\n  --color-background: linear-gradient(to right, #434343 0%, black 100%);\n  --color-heading: #ECEFF4;\n  --color-subheading: #4C566A;\n  --color-accent: #4C566A;\n  --color-descent: #8FBCBB;\n  --color-mid: #727C8B;\n  --color-alt: #adb5bd;\n  --color-link: #8FBCBB;\n  --color-link-hover: #C0CFDF;\n}\n\n:where(html) {\n  --gradient-1:linear-gradient(to bottom right,#1f005c,#5b0060,#870160,#ac255e,#ca485c,#e16b5c,#f39060,#ffb56b);\n  --gradient-2:linear-gradient(to bottom right,#48005c,#8300e2,#a269ff);\n  --gradient-3:radial-gradient(circle at top right,#0ff,rgba(0,255,255,0)),radial-gradient(circle at bottom left,#ff1492,rgba(255,20,146,0));\n  --gradient-4:linear-gradient(to bottom right,#00f5a0,#00d9f5);\n  --gradient-5:conic-gradient(from -270deg at 75%,at 110%,#f0f,#fffaf0);\n  --gradient-5:conic-gradient(from -270deg at 75% 110%,#f0f,#fffaf0);\n  --gradient-6:conic-gradient(from -90deg at top left,#000,#fff);\n  --gradient-7:linear-gradient(to bottom right,#72c6ef,#004e8f);\n  --gradient-8:conic-gradient(from 90deg at 50%,at 0%,#111,50%,#222,#111);\n  --gradient-8:conic-gradient(from 90deg at 50% 0%,#111,50%,#222,#111);\n  --gradient-9:conic-gradient(from .5turn at bottom center,#add8e6,#fff);\n  --gradient-10:conic-gradient(from 90deg at 40%,at -25%,gold,#f79d03,#ee6907,#e6390a,#de0d0d,#d61039,#cf1261,#c71585,#cf1261,#d61039,#de0d0d,#ee6907,#f79d03,gold,gold,gold);\n  --gradient-10:conic-gradient(from 90deg at 40% -25%,gold,#f79d03,#ee6907,#e6390a,#de0d0d,#d61039,#cf1261,#c71585,#cf1261,#d61039,#de0d0d,#ee6907,#f79d03,gold,gold,gold);\n  --gradient-11:conic-gradient(at bottom left,#ff1493,cyan);\n  --gradient-12:conic-gradient(from 90deg at 25%,at -10%,#ff4500,#d3f340,#7bee85,#afeeee,#7bee85);\n  --gradient-12:conic-gradient(from 90deg at 25% -10%,#ff4500,#d3f340,#7bee85,#afeeee,#7bee85);\n  --gradient-13:radial-gradient(circle at 50%,at 200%,#000142,#3b0083,#b300c3,#ff059f,#ff4661,#ffad86,#fff3c7);\n  --gradient-13:radial-gradient(circle at 50% 200%,#000142,#3b0083,#b300c3,#ff059f,#ff4661,#ffad86,#fff3c7);\n  --gradient-14:conic-gradient(at top right,lime,cyan);\n  --gradient-15:linear-gradient(to bottom right,#c7d2fe,#fecaca,#fef3c7);\n  --gradient-16:radial-gradient(circle at 50%,at -250%,#374151,#111827,#000);\n  --gradient-16:radial-gradient(circle at 50% -250%,#374151,#111827,#000);\n  --gradient-17:conic-gradient(from -90deg at 50%,at -25%,blue,#8a2be2);\n  --gradient-17:conic-gradient(from -90deg at 50% -25%,blue,#8a2be2);\n  --gradient-18:linear-gradient(0deg,rgba(255,0,0,0.8),rgba(255,0,0,0) 75%),linear-gradient(60deg,rgba(255,255,0,0.8),rgba(255,255,0,0) 75%),linear-gradient(120deg,rgba(0,255,0,0.8),rgba(0,255,0,0) 75%),linear-gradient(180deg,rgba(0,255,255,0.8),rgba(0,255,255,0) 75%),linear-gradient(240deg,rgba(0,0,255,0.8),rgba(0,0,255,0) 75%),linear-gradient(300deg,rgba(255,0,255,0.8),rgba(255,0,255,0) 75%);\n  --gradient-19:linear-gradient(to bottom right,#ffe259,#ffa751);\n  --gradient-20:conic-gradient(from -135deg at -10% center,orange,#ff7715,#ff522a,#ff3f47,#ff5482,#ff69b4);\n  --gradient-21:conic-gradient(from -90deg at 25%,at 115%,red,#f06,#f0c,#c0f,#60f,#00f,#00f,#00f,#00f);\n  --gradient-21:conic-gradient(from -90deg at 25% 115%,red,#f06,#f0c,#c0f,#60f,#00f,#00f,#00f,#00f);\n  --gradient-22:linear-gradient(to bottom right,#acb6e5,#86fde8);\n  --gradient-23:linear-gradient(to bottom right,#536976,#292e49);\n  --gradient-24:conic-gradient(from .5turn at 0%,at 0%,#00c476,10%,#82b0ff,90%,#00c476);\n  --gradient-24:conic-gradient(from .5turn at 0% 0%,#00c476,10%,#82b0ff,90%,#00c476);\n  --gradient-25:conic-gradient(at 125%,at 50%,#b78cf7,#ff7c94,#ffcf0d,#ff7c94,#b78cf7);\n  --gradient-25:conic-gradient(at 125% 50%,#b78cf7,#ff7c94,#ffcf0d,#ff7c94,#b78cf7);\n  --gradient-26:linear-gradient(to bottom right,#9796f0,#fbc7d4);\n  --gradient-27:conic-gradient(from .5turn at bottom left,#ff1493,#639);\n  --gradient-28:conic-gradient(from -90deg at 50%,at 105%,#fff,orchid);\n  --gradient-28:conic-gradient(from -90deg at 50% 105%,#fff,orchid);\n  --gradient-29:radial-gradient(circle at top right,#bfb3ff,hsl(250 100% 85%/0%)),radial-gradient(circle at bottom left,#86acf9,hsl(220 90% 75%/0%));\n  --gradient-30:radial-gradient(circle at top right,#00ff80,rgba(0,255,128,0)),radial-gradient(circle at bottom left,#adffd6,hsl(150 100% 84%/0%));\n  --noise-1:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.005' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");\n  --noise-2:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.05' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");\n  --noise-3:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.25' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");\n  --noise-4:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 2056 2056' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");\n  --noise-5:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 2056 2056' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.75' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");\n  --noise-filter-1:contrast(300%) brightness(100%);\n  --noise-filter-2:contrast(200%) brightness(150%);\n  --noise-filter-3:contrast(200%) brightness(250%);\n  --noise-filter-4:contrast(200%) brightness(500%);\n  --noise-filter-5:contrast(200%) brightness(1000%);\n}\n\n:where(html) {\n  --border-size-1:1px;\n  --border-size-2:2px;\n  --border-size-3:5px;\n  --border-size-4:10px;\n  --border-size-5:25px;\n  --radius-1:2px;\n  --radius-2:5px;\n  --radius-3:1rem;\n  --radius-4:2rem;\n  --radius-5:4rem;\n  --radius-6:8rem;\n  --radius-round:1e5px;\n  --radius-blob-1:30% 70% 70% 30%/53% 30% 70% 47%;\n  --radius-blob-2:53% 47% 34% 66%/63% 46% 54% 37%;\n  --radius-blob-3:37% 63% 56% 44%/49% 56% 44% 51%;\n  --radius-blob-4:63% 37% 37% 63%/43% 37% 63% 57%;\n  --radius-blob-5:49% 51% 48% 52%/57% 44% 56% 43%;\n  --radius-conditional-1:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-1));\n  --radius-conditional-2:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-2));\n  --radius-conditional-3:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-3));\n  --radius-conditional-4:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-4));\n  --radius-conditional-5:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-5));\n  --radius-conditional-6:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-6));\n}\n\n:where(html) {\n  --shadow-color:220 3% 15%;\n  --shadow-strength:1%;\n  --shadow-1:0 1px 2px -1px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));\n  --shadow-2:0 3px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 7px 14px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%));\n  --shadow-3:0 -1px 3px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 1px 2px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 2px 5px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 4px 12px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 12px 15px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));\n  --shadow-4:0 -2px 5px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 1px 1px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 2px 2px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 5px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 9px 9px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 16px 16px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 6%));\n  --shadow-5:0 -1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 2px 1px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 5px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 10px 10px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 20px 20px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 40px 40px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));\n  --shadow-6:0 -1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 3px 2px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 7px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 12px 10px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 22px 18px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 41px 33px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 6%)),0 100px 80px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));\n  --inner-shadow-0:inset 0 0 0 1px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));\n  --inner-shadow-1:inset 0 1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));\n  --inner-shadow-2:inset 0 1px 4px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));\n  --inner-shadow-3:inset 0 2px 8px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));\n  --inner-shadow-4:inset 0 2px 14px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));\n}\n\n@media (prefers-color-scheme: dark) {\n  :where(html) {\n    --shadow-color:220 40% 2%;\n    --shadow-strength:25%;\n  }\n}\n:where(html) {\n  --base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);\n  --p: clamp(1rem, 0.314vw + 1.184rem, 1.314rem);\n  --sm: clamp(0.8rem, 0.17vw + 0.76rem, 0.89rem);\n  --md: clamp(1.25rem, 0.61vw + 1.1rem, 1.58rem);\n  --lg: clamp(1.56rem, 1vw + 1.31rem, 2.11rem);\n  --xl: clamp(1.95rem, 1.56vw + 1.56rem, 2.81rem);\n  --xxl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);\n  --xxxl: clamp(3.05rem, 3.54vw + 2.17rem, 5rem);\n  --xxxxl: clamp(4.2rem, 4.81vw + 2.66rem, 5.8rem);\n  --h1: clamp(6.854rem, 6.85vw + 5.089rem, 11.089rem);\n  --h2: clamp(4.236rem, 4.34vw + 2.854rem, 6.854rem);\n  --h3: clamp(2.618rem, 2.69vw + 1.236rem, 4.236rem);\n  --h4: clamp(1.618rem, 1.84vw + 1.121rem, 2.618rem);\n  --h5: clamp(1.314rem, 0.82vw + 1.618rem, 1.618rem);\n  --h6: clamp(1.101rem, 0.6vw + 1.303rem, 1.303rem);\n  --size-1: clamp(0.5rem, 1vw, 1rem);\n  --size-2: clamp(1rem, 2vw, 1.5rem);\n  --size-3: clamp(1.5rem, 3vw, 2rem);\n  --size-4: clamp(2rem, 4vw, 3rem);\n  --size-5: clamp(4rem, 5vw, 5rem);\n  --size-6: clamp(5rem, 7vw, 7.5rem);\n  --size-7: clamp(7.5rem, 10vw, 10rem);\n  --size-8: clamp(10rem, 20vw, 15rem);\n  --size-9: clamp(15rem, 30vw, 20rem);\n  --wrap-article-1: 20ch;\n  --wrap-article-2: 45ch;\n  --wrap-article-3: 60ch;\n  --wrap-heading-1: 20ch;\n  --wrap-heading-2: 25ch;\n  --wrap-heading-3: 35ch;\n  --phi: 1.618;\n  --e: 2.71828;\n  --pi: 3.14159;\n  --golden: 1.618;\n  --content-width: 1920px;\n  --spacing-unit: calc(1.618rem * var(--phi));\n  --space-phi: calc(1.618rem * var(--phi));\n  --space-e: calc(1.618rem * var(--e));\n  --space-pi: calc(1.618rem * var(--pi));\n}\n\n@media (max-width: 64rem) {\n  :where(html) {\n    --h1: var(--xxxl);\n    --h2: var(--xxl);\n    --h3: var(--xl);\n    --h4: var(--lg);\n    --h5: var(--md);\n  }\n}\n[data-flex],\n[data-flex=row] {\n  box-sizing: border-box;\n  margin: 0 auto;\n  width: 100%;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n\n[data-flex=column] {\n  box-sizing: border-box;\n  margin: 0 auto;\n  width: 100%;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: column;\n  flex-wrap: wrap;\n}\n\n[data-column=\"1\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 1);\n  max-width: calc(100% / 12 * 1);\n  padding: 0;\n}\n\n[data-column=\"2\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 2);\n  max-width: calc(100% / 12 * 2);\n  padding: 0;\n}\n\n[data-column=\"3\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 3);\n  max-width: calc(100% / 12 * 3);\n  padding: 0;\n}\n\n[data-column=\"4\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 4);\n  max-width: calc(100% / 12 * 4);\n  padding: 0;\n}\n\n[data-column=\"5\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 5);\n  max-width: calc(100% / 12 * 5);\n  padding: 0;\n}\n\n[data-column=\"6\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 6);\n  max-width: calc(100% / 12 * 6);\n  padding: 0;\n}\n\n[data-column=\"7\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 7);\n  max-width: calc(100% / 12 * 7);\n  padding: 0;\n}\n\n[data-column=\"8\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 8);\n  max-width: calc(100% / 12 * 8);\n  padding: 0;\n}\n\n[data-column=\"9\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 9);\n  max-width: calc(100% / 12 * 9);\n  padding: 0;\n}\n\n[data-column=\"10\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 10);\n  max-width: calc(100% / 12 * 10);\n  padding: 0;\n}\n\n[data-column=\"11\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 11);\n  max-width: calc(100% / 12 * 11);\n  padding: 0;\n}\n\n[data-column=\"12\"] {\n  box-sizing: border-box;\n  flex-basis: calc(100% / 12 * 12);\n  max-width: calc(100% / 12 * 12);\n  padding: 0;\n}\n\n@media (max-width: 64rem) {\n  [data-column=\"1\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"2\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"3\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"4\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"5\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"6\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"7\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"8\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"9\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"10\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"11\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n@media (max-width: 64rem) {\n  [data-column=\"12\"] {\n    box-sizing: border-box;\n    flex-basis: calc(100% / 12 * 12);\n    max-width: calc(100% / 12 * 12);\n    padding: 0;\n  }\n}\n[data-column=auto] {\n  box-sizing: border-box;\n  flex-grow: 1;\n  flex-basis: 0;\n  max-width: 100%;\n  padding: 0;\n}\n\n[data-gap=\"1\"] {\n  gap: 1rem;\n}\n\n[data-gap=\"2\"] {\n  gap: 2rem;\n}\n\n[data-gap=\"3\"] {\n  gap: 3rem;\n}\n\n[data-gap=\"4\"] {\n  gap: 4rem;\n}\n\n[data-gap=\"5\"] {\n  gap: 5rem;\n}\n\n[data-gap=\"6\"] {\n  gap: 6rem;\n}\n\n[data-gap=\"7\"] {\n  gap: 7rem;\n}\n\n[data-gap=\"8\"] {\n  gap: 8rem;\n}\n\n[data-gap=\"9\"] {\n  gap: 9rem;\n}\n\n[data-gap=\"10\"] {\n  gap: 10rem;\n}\n\n[data-gap=\"11\"] {\n  gap: 11rem;\n}\n\n[data-gap=\"12\"] {\n  gap: 12rem;\n}\n\n[data-grid] {\n  display: grid;\n  margin: 0 auto;\n  padding: 0;\n  width: 100%;\n}\n\n[data-grid] > div {\n  padding: calc(var(--space-phi) / var(--pi));\n}\n\n[data-grid=auto] {\n  grid-template-columns: var(--grid_adapt_mixin);\n}\n\n[data-grid=\"1\"] {\n  grid-template-columns: repeat(1, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2\"] {\n  grid-template-columns: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3\"] {\n  grid-template-columns: repeat(3, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4\"] {\n  grid-template-columns: repeat(4, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"5\"] {\n  grid-template-columns: repeat(5, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"6\"] {\n  grid-template-columns: repeat(6, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2x1\"] {\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2x1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2x1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2x2\"] {\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2x2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2x2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2x3\"] {\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2x3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2x3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2x4\"] {\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2x4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2x4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2x5\"] {\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2x5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2x5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"2x6\"] {\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"2x6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"2x6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3x1\"] {\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3x1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3x1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3x2\"] {\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3x2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3x2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3x3\"] {\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3x3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3x3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3x4\"] {\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3x4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3x4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3x5\"] {\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3x5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3x5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"3x6\"] {\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"3x6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"3x6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4x1\"] {\n  grid-template-columns: repeat(1, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4x1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4x1\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4x2\"] {\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4x2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4x2\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4x3\"] {\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4x3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4x3\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4x4\"] {\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4x4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4x4\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4x5\"] {\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4x5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4x5\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-grid=\"4x6\"] {\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n@media (max-width: 48rem) {\n  [data-grid=\"4x6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  }\n}\n@media (min-width: 48rem) and (max-width: 63rem) {\n  [data-grid=\"4x6\"] {\n    grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\n  }\n}\n\n[data-gutter=x] {\n  padding: 0 var(--space-phi);\n}\n\n[data-gutter=y] {\n  padding: calc(var(--space-e) / 2) 0;\n}\n\n[data-gutter=\"x/y\"] {\n  padding: calc(var(--space-e) / 2) var(--space-phi);\n}\n\n@keyframes gradient {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n@keyframes moveDots {\n  from {\n    transform: rotate(0deg) scale(12) translateX(-20px);\n  }\n  to {\n    transform: rotate(360deg) scale(18) translateX(20px);\n  }\n}\n@keyframes textMorph3d {\n  0% {\n    text-shadow: 2px 2px 0px rgb(40, 40, 40), 0px 0px 2px rgba(10, 189, 240, 0.05), 0px 0px 0px rgba(254, 1, 1, 0.08);\n  }\n  50% {\n    text-shadow: 2px 2px 0px rgb(40, 40, 40), -5px -2px 0px rgba(10, 189, 240, 0.1), 4px 4px 1px rgba(254, 1, 1, 0.15);\n  }\n  100% {\n    text-shadow: 2px 2px 0px rgb(40, 40, 40), 4px 3px 1px rgba(10, 189, 240, 0.04), -1px 3px 2px rgba(254, 1, 1, 0.05);\n  }\n}\n@keyframes hueRotator {\n  0% {\n    backdrop-filter: blur(0px) contrast(1) hue-rotate(0);\n  }\n  50% {\n    backdrop-filter: blur(3px) contrast(1.2) hue-rotate(180deg);\n  }\n  100% {\n    backdrop-filter: blur(0px) contrast(1) hue-rotate(0);\n  }\n}\n@keyframes line-top-in {\n  0% {\n    left: -5px;\n    bot: 0;\n    transform: rotate(-45deg);\n  }\n  20% {\n    left: -5px;\n    bot: 0;\n    transform: rotate(-60deg);\n  }\n  80% {\n    left: 0;\n    bot: 0;\n    transform: rotate(15deg);\n  }\n  100% {\n    left: 0;\n    bot: 1px;\n    transform: rotate(0deg);\n  }\n}\n@keyframes line-top-out {\n  0% {\n    left: 0;\n    top: 0;\n    transform: rotate(0deg);\n  }\n  20% {\n    left: 0;\n    top: 0;\n    transform: rotate(15deg);\n  }\n  80% {\n    left: -5px;\n    top: 0;\n    transform: rotate(-60deg);\n  }\n  100% {\n    left: -5px;\n    top: 1px;\n    transform: rotate(-45deg);\n  }\n}\n@keyframes line-bot-in {\n  0% {\n    left: -5px;\n    transform: rotate(45deg);\n  }\n  20% {\n    left: -5px;\n    bot: 0;\n    transform: rotate(60deg);\n  }\n  80% {\n    left: 0;\n    bot: 0;\n    transform: rotate(-15deg);\n  }\n  100% {\n    left: 0;\n    transform: rotate(0deg);\n  }\n}\n@keyframes line-bot-out {\n  0% {\n    left: 0;\n    transform: rotate(0deg);\n  }\n  20% {\n    left: 0;\n    transform: rotate(-15deg);\n  }\n  80% {\n    left: -5px;\n    transform: rotate(60deg);\n  }\n  100% {\n    left: -5px;\n    transform: rotate(45deg);\n  }\n}\n.hidden,\n.visuallyhidden,\n.hide {\n  display: none;\n  visibility: hidden;\n  backface-visibility: hidden;\n  border: 0;\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n.clearfix:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n.rgb-overlay {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: rgba(114, 124, 139, 0.3);\n  mix-blend-mode: color-burn;\n  animation-name: hueRotator;\n  animation-duration: 8s;\n  animation-timing-function: ease-in-out;\n  animation-fill-mode: both;\n  animation-iteration-count: infinite;\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\nhtml {\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-size: 118.2%;\n}\n\nbody {\n  color: var(--color-text);\n  font-size: var(--base);\n  font-family: \"Barlow\", sans-serif;\n  font-weight: 300;\n  background-image: var(--color-background);\n  background-size: 200%;\n  background-attachment: fixed;\n  text-rendering: optimizeLegibility;\n  -webkit-text-size-adjust: 100%;\n  font-feature-settings: \"kern\" 1;\n  font-kerning: normal;\n  scroll-behavior: smooth;\n  @apply flex flex-col w-full h-full relative;\n}\n\nhtml.trans,\nhtml.trans *,\nhtml.trans *:before,\nhtml.trans *:after {\n  transition: all 750ms !important;\n  transition-delay: 0 !important;\n}\n\na {\n  position: relative;\n  color: var(--color-link);\n  text-decoration: none;\n  font-weight: 600;\n  transition: all 300ms ease;\n}\na:hover, a:focus {\n  color: var(--color-link-hover);\n  text-decoration: none;\n  font-weight: 600;\n}\n\nmain {\n  @apply relative w-full h-full bg-white;\n}\n\n.container {\n  @apply px-2;\n  margin: 0 auto;\n}\n@media (min-width: 48rem) {\n  .container {\n    max-width: calc(48rem - (var(--space-phi) * 2));\n  }\n}\n@media (min-width: 64rem) {\n  .container {\n    max-width: calc(64rem - (var(--space-phi) * 2));\n  }\n}\n@media (min-width: 80rem) {\n  .container {\n    max-width: calc(80rem - (var(--space-phi) * 2));\n  }\n}\n@media (min-width: 90rem) {\n  .container {\n    max-width: calc(90rem - (var(--space-phi) * 2));\n  }\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  display: inline-block;\n}\n\nfigure {\n  display: block;\n  position: relative;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  font-family: \"Genos\", sans-serif;\n  font-weight: 500;\n  line-height: 1;\n  margin-top: clamp(var(--phi)rem, 3.14vw, var(--pi)rem);\n  margin-bottom: clamp(0.618rem, 1.618vw, 1.618rem);\n  color: var(--color-heading);\n  transition: all 200ms ease;\n}\nh1:first-of-type, h2:first-of-type, h3:first-of-type, h4:first-of-type, h5:first-of-type, h6:first-of-type {\n  margin-top: 0;\n}\n\n.sub {\n  color: var(--color-subheading);\n  position: relative;\n  top: -2.5vw;\n  margin-left: 2vw;\n}\n\nh1 {\n  font-size: var(--h1);\n  letter-spacing: -0.1vw;\n  margin-top: 0;\n}\n\nh2 {\n  font-size: var(--h2);\n  letter-spacing: -0.075vw;\n}\n\nh3 {\n  font-size: var(--h3);\n  letter-spacing: -0.05vw;\n}\n\nh4 {\n  font-size: var(--h4);\n  letter-spacing: -0.025vw;\n}\n\nh5 {\n  font-size: var(--h5);\n}\n\nh6 {\n  font-size: var(--h6);\n}\n\nsmall,\n.text-small {\n  font-size: 0.618rem;\n  line-height: 1.5;\n  letter-spacing: 0.0618rem;\n}\n\np {\n  font-size: var(--p);\n  line-height: 1.618rem;\n  margin: calc(var(--space-phi) * 0.75) 0 calc(var(--space-phi) * 0.75);\n}\np:not(:first-of-type) {\n  margin-top: 0;\n}\n\nb, strong {\n  font-weight: 700;\n}\n\n:where(html) {\n  --icon-size: var(--lg);\n}\n\ni, .icon {\n  @apply inline-flex justify-center items-center align-middle;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  transition: all 300ms ease;\n}\ni:hover, .icon:hover {\n  filter: brightness(1.5);\n}\ni svg, .icon svg {\n  @apply w-full h-full object-fill;\n}\n\n.i\\:h1 {\n  --icon-size: var(--h1);\n}\n\n.i\\:h2 {\n  --icon-size: var(--h2);\n}\n\n.i\\:h3 {\n  --icon-size: var(--h3);\n}\n\n.i\\:h4 {\n  --icon-size: var(--h4);\n}\n\n.i\\:h5 {\n  --icon-size: var(--h5);\n}\n\n.i\\:xl {\n  --icon-size: var(--xl);\n}\n\n.i\\:lg {\n  --icon-size: var(--lg);\n}\n\n.i\\:md {\n  --icon-size: var(--md);\n}\n\n.i\\:sm {\n  --icon-size: var(--sm);\n}\n\n.i\\:p {\n  --icon-size: var(--p);\n}\n\n.i\\:100 {\n  --icon-size: 100%;\n}\n\n.header {\n  @apply relative w-full py-8;\n}\n.header .container {\n  @apply flex items-center;\n}\n.header .title {\n  @apply flex-none;\n}\n.header .title__name {\n  font-size: var(--xxxl);\n  text-transform: uppercase;\n}\n.header .title__name a {\n  color: #5E81AC;\n}\n.header .navbar {\n  @apply flex-1;\n}\n.header .navbar .menu {\n  @apply flex flex-1 w-full justify-end pr-10;\n}\n.header .navbar .menu ul {\n  @apply flex items-center justify-end gap-10;\n}\n.header .navbar .menu ul li a {\n  font-size: var(--lg);\n  font-family: \"Genos\", sans-serif;\n  font-weight: 500;\n}\n\n.footer {\n  @apply relative flex pt-6 pb-12 border-t border-slate-400/20;\n  background-color: rgba(0, 0, 0, 0.25);\n}\n.footer .container {\n  @apply relative flex items-start justify-start;\n  margin: 0 auto;\n}\n@media (min-width: 48rem) {\n  .footer .container {\n    max-width: calc(48rem - (var(--space-phi) * 2));\n  }\n}\n@media (min-width: 64rem) {\n  .footer .container {\n    max-width: calc(64rem - (var(--space-phi) * 2));\n  }\n}\n@media (min-width: 80rem) {\n  .footer .container {\n    max-width: calc(80rem - (var(--space-phi) * 2));\n  }\n}\n@media (min-width: 90rem) {\n  .footer .container {\n    max-width: calc(90rem - (var(--space-phi) * 2));\n  }\n}\n.footer__info {\n  @apply flex-auto justify-start;\n}\n.footer__social {\n  @apply flex-1 flex justify-end;\n}\n.footer__social nav {\n  margin-right: 1rem;\n}\n.footer__social nav ul {\n  @apply flex flex-col justify-center gap-4;\n}\n.footer__social nav ul li {\n  @apply flex items-end justify-end text-right;\n}\n.footer__social nav ul li a i {\n  --icon-size: var(--md);\n  vertical-align: text-bottom;\n}\n\n.content {\n  @apply relative flex flex-col w-full h-full m-0;\n  padding-top: var(--space-phi);\n  padding-bottom: var(--space-phi);\n}\n.content figure {\n  @apply border border-slate-700/40 hover:border-slate-500/80;\n}\n.content figure figcaption {\n  @apply absolute bottom-0 left-0 w-full px-4 py-4 opacity-50 backdrop-blur-md shadow-xl shadow-black;\n  background-color: #09090B;\n  color: var(--color-accent);\n  transition: all 300ms ease-in-out;\n}\n.content figure:hover figcaption {\n  @apply opacity-80;\n}",":where(html){--gradient-1:linear-gradient(to bottom right,#1f005c,#5b0060,#870160,#ac255e,#ca485c,#e16b5c,#f39060,#ffb56b);--gradient-2:linear-gradient(to bottom right,#48005c,#8300e2,#a269ff);--gradient-3:radial-gradient(circle at top right,#0ff,rgba(0,255,255,0)),radial-gradient(circle at bottom left,#ff1492,rgba(255,20,146,0));--gradient-4:linear-gradient(to bottom right,#00f5a0,#00d9f5);--gradient-5:conic-gradient(from -270deg at 75%,at 110%,#f0f,#fffaf0);--gradient-5:conic-gradient(from -270deg at 75% 110%,#f0f,#fffaf0);--gradient-6:conic-gradient(from -90deg at top left,#000,#fff);--gradient-7:linear-gradient(to bottom right,#72c6ef,#004e8f);--gradient-8:conic-gradient(from 90deg at 50%,at 0%,#111,50%,#222,#111);--gradient-8:conic-gradient(from 90deg at 50% 0%,#111,50%,#222,#111);--gradient-9:conic-gradient(from .5turn at bottom center,#add8e6,#fff);--gradient-10:conic-gradient(from 90deg at 40%,at -25%,gold,#f79d03,#ee6907,#e6390a,#de0d0d,#d61039,#cf1261,#c71585,#cf1261,#d61039,#de0d0d,#ee6907,#f79d03,gold,gold,gold);--gradient-10:conic-gradient(from 90deg at 40% -25%,gold,#f79d03,#ee6907,#e6390a,#de0d0d,#d61039,#cf1261,#c71585,#cf1261,#d61039,#de0d0d,#ee6907,#f79d03,gold,gold,gold);--gradient-11:conic-gradient(at bottom left,#ff1493,cyan);--gradient-12:conic-gradient(from 90deg at 25%,at -10%,#ff4500,#d3f340,#7bee85,#afeeee,#7bee85);--gradient-12:conic-gradient(from 90deg at 25% -10%,#ff4500,#d3f340,#7bee85,#afeeee,#7bee85);--gradient-13:radial-gradient(circle at 50%,at 200%,#000142,#3b0083,#b300c3,#ff059f,#ff4661,#ffad86,#fff3c7);--gradient-13:radial-gradient(circle at 50% 200%,#000142,#3b0083,#b300c3,#ff059f,#ff4661,#ffad86,#fff3c7);--gradient-14:conic-gradient(at top right,lime,cyan);--gradient-15:linear-gradient(to bottom right,#c7d2fe,#fecaca,#fef3c7);--gradient-16:radial-gradient(circle at 50%,at -250%,#374151,#111827,#000);--gradient-16:radial-gradient(circle at 50% -250%,#374151,#111827,#000);--gradient-17:conic-gradient(from -90deg at 50%,at -25%,blue,#8a2be2);--gradient-17:conic-gradient(from -90deg at 50% -25%,blue,#8a2be2);--gradient-18:linear-gradient(0deg,rgba(255,0,0,0.8),rgba(255,0,0,0) 75%),linear-gradient(60deg,rgba(255,255,0,0.8),rgba(255,255,0,0) 75%),linear-gradient(120deg,rgba(0,255,0,0.8),rgba(0,255,0,0) 75%),linear-gradient(180deg,rgba(0,255,255,0.8),rgba(0,255,255,0) 75%),linear-gradient(240deg,rgba(0,0,255,0.8),rgba(0,0,255,0) 75%),linear-gradient(300deg,rgba(255,0,255,0.8),rgba(255,0,255,0) 75%);--gradient-19:linear-gradient(to bottom right,#ffe259,#ffa751);--gradient-20:conic-gradient(from -135deg at -10% center,orange,#ff7715,#ff522a,#ff3f47,#ff5482,#ff69b4);--gradient-21:conic-gradient(from -90deg at 25%,at 115%,red,#f06,#f0c,#c0f,#60f,#00f,#00f,#00f,#00f);--gradient-21:conic-gradient(from -90deg at 25% 115%,red,#f06,#f0c,#c0f,#60f,#00f,#00f,#00f,#00f);--gradient-22:linear-gradient(to bottom right,#acb6e5,#86fde8);--gradient-23:linear-gradient(to bottom right,#536976,#292e49);--gradient-24:conic-gradient(from .5turn at 0%,at 0%,#00c476,10%,#82b0ff,90%,#00c476);--gradient-24:conic-gradient(from .5turn at 0% 0%,#00c476,10%,#82b0ff,90%,#00c476);--gradient-25:conic-gradient(at 125%,at 50%,#b78cf7,#ff7c94,#ffcf0d,#ff7c94,#b78cf7);--gradient-25:conic-gradient(at 125% 50%,#b78cf7,#ff7c94,#ffcf0d,#ff7c94,#b78cf7);--gradient-26:linear-gradient(to bottom right,#9796f0,#fbc7d4);--gradient-27:conic-gradient(from .5turn at bottom left,#ff1493,#639);--gradient-28:conic-gradient(from -90deg at 50%,at 105%,#fff,orchid);--gradient-28:conic-gradient(from -90deg at 50% 105%,#fff,orchid);--gradient-29:radial-gradient(circle at top right,#bfb3ff,hsl(250 100% 85%/0%)),radial-gradient(circle at bottom left,#86acf9,hsl(220 90% 75%/0%));--gradient-30:radial-gradient(circle at top right,#00ff80,rgba(0,255,128,0)),radial-gradient(circle at bottom left,#adffd6,hsl(150 100% 84%/0%));--noise-1:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.005' numOctaves='2' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");--noise-2:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.05' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");--noise-3:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.25' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");--noise-4:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 2056 2056' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.5' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");--noise-5:url(\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 2056 2056' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.75' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E\");--noise-filter-1:contrast(300%) brightness(100%);--noise-filter-2:contrast(200%) brightness(150%);--noise-filter-3:contrast(200%) brightness(250%);--noise-filter-4:contrast(200%) brightness(500%);--noise-filter-5:contrast(200%) brightness(1000%)}",":where(html){--border-size-1:1px;--border-size-2:2px;--border-size-3:5px;--border-size-4:10px;--border-size-5:25px;--radius-1:2px;--radius-2:5px;--radius-3:1rem;--radius-4:2rem;--radius-5:4rem;--radius-6:8rem;--radius-round:1e5px;--radius-blob-1:30% 70% 70% 30%/53% 30% 70% 47%;--radius-blob-2:53% 47% 34% 66%/63% 46% 54% 37%;--radius-blob-3:37% 63% 56% 44%/49% 56% 44% 51%;--radius-blob-4:63% 37% 37% 63%/43% 37% 63% 57%;--radius-blob-5:49% 51% 48% 52%/57% 44% 56% 43%;--radius-conditional-1:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-1));--radius-conditional-2:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-2));--radius-conditional-3:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-3));--radius-conditional-4:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-4));--radius-conditional-5:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-5));--radius-conditional-6:clamp(0px,calc(100vw - 100%) * 1e5,var(--radius-6))}",":where(html){--shadow-color:220 3% 15%;--shadow-strength:1%;--shadow-1:0 1px 2px -1px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));--shadow-2:0 3px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 7px 14px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%));--shadow-3:0 -1px 3px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 1px 2px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 2px 5px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 4px 12px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 12px 15px -5px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));--shadow-4:0 -2px 5px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 1px 1px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 2px 2px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 5px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 9px 9px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 16px 16px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 6%));--shadow-5:0 -1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 2px 1px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 5px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 10px 10px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 20px 20px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 40px 40px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));--shadow-6:0 -1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 2%)),0 3px 2px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 7px 5px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 3%)),0 12px 10px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 4%)),0 22px 18px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 5%)),0 41px 33px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 6%)),0 100px 80px -2px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 7%));--inner-shadow-0:inset 0 0 0 1px hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));--inner-shadow-1:inset 0 1px 2px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));--inner-shadow-2:inset 0 1px 4px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));--inner-shadow-3:inset 0 2px 8px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%));--inner-shadow-4:inset 0 2px 14px 0 hsl(var(--shadow-color)/calc(var(--shadow-strength) + 9%))}@media (prefers-color-scheme:dark){:where(html){--shadow-color:220 40% 2%;--shadow-strength:25%}}","@use \"~accoutrement/sass/tools\";\r\n\r\n$spacing-global: (\r\n   \"phi\" : 1.618,\r\n   \"e\" : 2.71828,\r\n   \"pi\" : 3.14159,\r\n   \"golden\" : 1.618,\r\n   \"content-width\" : 1920px,\r\n   \"spacing-unit\" : calc(1.618rem * var(--phi)),\r\n   \"space-phi\" : calc(1.618rem * var(--phi)),\r\n   \"space-e\" : calc(1.618rem * var(--e)),\r\n   \"space-pi\" : calc(1.618rem * var(--pi))\r\n);\r\n\r\n$fluid-text-sizes: (\r\n   \"base\" : clamp(1rem, 0.34vw + 0.91rem, 1.19rem),\r\n   \"p\" : clamp(1rem, 0.314vw + 1.184rem, 1.314rem),\r\n   \"sm\" : clamp(0.8rem, 0.17vw + 0.76rem, 0.89rem),\r\n   \"md\" : clamp(1.25rem, 0.61vw + 1.1rem, 1.58rem),\r\n   \"lg\" : clamp(1.56rem, 1vw + 1.31rem, 2.11rem),\r\n   \"xl\" : clamp(1.95rem, 1.56vw + 1.56rem, 2.81rem),\r\n   \"xxl\" : clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem),\r\n   \"xxxl\" : clamp(3.05rem, 3.54vw + 2.17rem, 5rem),\r\n   \"xxxxl\" : clamp(4.20rem, 4.81vw + 2.66rem, 5.8rem),\r\n   \"h1\" : clamp(6.854rem, 6.85vw + 5.089rem, 11.089rem),\r\n   \"h2\" : clamp(4.236rem, 4.34vw + 2.854rem, 6.854rem),\r\n   \"h3\" : clamp(2.618rem, 2.69vw + 1.236rem, 4.236rem),\r\n   \"h4\" : clamp(1.618rem, 1.84vw + 1.121rem, 2.618rem),\r\n   \"h5\" : clamp(1.314rem, 0.82vw + 1.618rem, 1.618rem),\r\n   \"h6\" : clamp(1.101rem, 0.60vw + 1.303rem, 1.303rem)\r\n);\r\n\r\n$fluid-sizes: (\r\n   \"1\": clamp(.5rem, 1vw, 1rem),\r\n   \"2\": clamp(1rem, 2vw, 1.5rem),\r\n   \"3\": clamp(1.5rem, 3vw, 2rem),\r\n   \"4\": clamp(2rem, 4vw, 3rem),\r\n   \"5\": clamp(4rem, 5vw, 5rem),\r\n   \"6\": clamp(5rem, 7vw, 7.5rem),\r\n   \"7\": clamp(7.5rem, 10vw, 10rem),\r\n   \"8\": clamp(10rem, 20vw, 15rem),\r\n   \"9\": clamp(15rem, 30vw, 20rem)\r\n);\r\n\r\n$container-sizes: (\r\n   \"article-1\" : 20ch,\r\n   \"article-2\" : 45ch,\r\n   \"article-3\" : 60ch,\r\n   \"heading-1\" : 20ch,\r\n   \"heading-2\" : 25ch,\r\n   \"heading-3\" : 35ch\r\n);\r\n\r\n:where(html) {\r\n   @include tools.custom-props($fluid-text-sizes);\r\n   @include tools.custom-props($fluid-sizes, 'size-');\r\n   @include tools.custom-props($container-sizes, 'wrap-');\r\n   @include tools.custom-props($spacing-global);\r\n}\r\n\r\n@include breakpoint(max, medium) {\r\n   :where(html) {\r\n      --h1: var(--xxxl);\r\n      --h2: var(--xxl);\r\n      --h3: var(--xl);\r\n      --h4: var(--lg);\r\n      --h5: var(--md);\r\n   }\r\n}\r\n","@use 'sass:string';\n@use '../utils/string' as s;\n\n// Ident\n// -----\n/// Formats any string\n/// (like a Sass variable or token name)\n/// as a CSS \"dashed-ident\"\n/// that can be used for CSS custom properties.\n/// Spaces are replaced with a dash,\n/// and an optional prefix can be added,\n/// in the format `--<prefix><string>`.\n///\n/// @since 4.0.0 -\n/// - NEW: Provided publicly as `ident()`\n/// @since 2.0.0 -\n/// - NEW: Initial private release as `_a_var-name()`\n///\n/// @group vars\n/// @example scss\n///   $colors: (\n///     'brand': mediumvioletred,\n///     'action': teal,\n///   );\n///\n///   html {\n///     @each $name, $value in $colors {\n///       #{tools.ident($name, 'colors-')}: #{$value};\n///     }\n///   }\n///\n/// @param {string} $name -\n///   The name of the token to be used as a variable\n/// @param {string | null} $prefix [null] -\n///   Optional prefix added to the token name\n@function ident($name, $prefix: null) {\n  $string: string.unquote('--#{$prefix}#{$name}');\n  $string: s.replace($string, ' ', '-', 'all');\n  @return $string;\n}\n\n// Custom Props\n// ------------\n/// Converts a map of variable names and values\n/// into CSS custom properties,\n/// in the format `--<prefix><map-key>: <map-value>`.\n///\n/// This can be used with manually-generated maps,\n/// but we can also use the Sass `module-variables` function\n/// to generate a map of all the variables in a given module:\n///\n/// ```scss\n///   @use 'accoutrement/tools';\n///   @use 'sass:meta';\n///   @use '_my-colors';\n///\n///   $my-colors: meta.module-variables('_my-colors');\n///   html {\n///     @include tools.custom-props($my-colors, 'colors-');\n///   }\n/// ```\n///\n/// @since 4.0.0 -\n/// - NEW: Initial release\n///\n/// @group vars\n/// @example scss\n///   $colors: (\n///     'brand': mediumvioletred,\n///     'action': teal,\n///   );\n///\n///   html {\n///     @include tools.custom-props($colors, 'colors-');\n///   }\n///\n/// @param {string} $map -\n///   A map of keys and values to be converted into custom properties\n/// @param {string | null} $prefix [null] -\n///   Optional prefix added to each property name\n/// @output -\n///   Custom properties for every key/value pair in a map.\n@mixin custom-props($map, $prefix: null) {\n  @each $name, $value in $map {\n    #{ident($name, $prefix)}: #{$value};\n  }\n}\n","@charset \"UTF-8\";\n\n@mixin breakpoint($params...) {\n  @if length($params) == 1 {\n    $value: nth($params, 1);\n    @if map-has-key($map-for-breakpoints, $value) {\n      @media (width: map-get($map-for-breakpoints, $value)) {\n        @content;\n      }\n    } @else {\n      @media (width: $value) {\n        @content;\n      }\n    }\n  } @else if length($params) == 2 {\n    @if not index(\"only\" \"min\" \"max\" \"between\", nth($params, 1)) {\n      $start: nth($params, 1);\n      $end: nth($params, 2);\n      @media (min-width: #{__validateBreakpoint($start)}) and (max-width: #{if(map-has-key($map-for-breakpoints, $end), __validateBreakpoint($end) - 1, $end)}) {\n        @content;\n      }\n    } @else {\n      $mode: nth($params, 1);\n      $value: nth($params, 2);\n      @if $mode == \"only\" {\n        @if map-has-key($map-for-breakpoints, $value) {\n          @media (width: map-get($map-for-breakpoints, $value)) {\n            @content;\n          }\n        } @else {\n          @media (width: $value) {\n            @content;\n          }\n        }\n      } @else if $mode == \"min\" {\n        @if map-has-key($map-for-breakpoints, $value) {\n          @media (min-width: map-get($map-for-breakpoints, $value)) {\n            @content;\n          }\n        } @else {\n          @media (min-width: $value) {\n            @content;\n          }\n        }\n      } @else if $mode == \"max\" {\n        @if map-has-key($map-for-breakpoints, $value) {\n          @media (max-width: map-get($map-for-breakpoints, $value)) {\n            @content;\n          }\n        } @else {\n          @media (max-width: $value) {\n            @content;\n          }\n        }\n      } @else if $mode == \"between\" {\n        $start: nth($value, 1);\n        $end: nth($value, 2);\n        @media (min-width: #{__validateBreakpoint($start)}) and (max-width: #{if(map-has-key($map-for-breakpoints, $end), __validateBreakpoint($end) - 1, $end)}) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// ----\r\n// Flex Grid + Data-attributes...\r\n// ----\r\n// I just can't get over semantic styling enough to convert entirely to utility classes...\r\n// but data-attributes are fun, especially for anything that is assigned numeric values. And I love flexbox.\r\n// I'll do some Grid stuff too, but Flex is my jam.\r\n//\r\n// http://sassflexboxgrid.com\r\n// ^^^ This guy wrote a very handy set of mixins to simplify row and column generation using Sass and Flexbox\r\n// fully decked out with responsive breakpoint functions and generators for utility classes. Here I'll just be\r\n// using the row and column mixins, passing through a @for function to generate data-attribute selectors with\r\n// 12 columns.\r\n// ----\r\n\r\n[data-flex],\r\n[data-flex=\"row\"] {\r\n  @include row($wrap: nowrap);\r\n\r\n}\r\n\r\n[data-flex=\"column\"] {\r\n  @include row($direction: column);\r\n}\r\n\r\n$flex-columns: 12;\r\n\r\n@for $i from 1 through $flex-columns {\r\n  [data-column=\"#{$i}\"] {\r\n    @include col($i);\r\n  }\r\n}\r\n\r\n@for $i from 1 through $flex-columns {\r\n  @include breakpoint(max, medium) {\r\n    [data-column=\"#{$i}\"] {\r\n      @include col(12);\r\n    }\r\n  }\r\n}\r\n\r\n[data-column=\"auto\"] {\r\n  @include col();\r\n}\r\n\r\n@for $i from 1 through $flex-columns {\r\n  [data-gap=\"#{$i}\"] {\r\n    gap: #{$i}rem;\r\n  }\r\n}\r\n\r\n// ----\r\n// CSS Grid + Data-attributes\r\n// ----\r\n// So I said I'd do some grid stuff too, ok, here goes. I wrote this just before I got over my\r\n// reluctancy to embrace Tailwind, which makes shaping grid elements pretty simple on its own.\r\n// But I was proud of this little addition to my toolkit, especially having just been an exercise\r\n// of \"can I?\" Yeah. I can.\r\n// ----\r\n\r\n[data-grid] {\r\n  display: grid;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  width: 100%;\r\n}\r\n\r\n[data-grid] > div {\r\n  padding: calc($space-phi / $pi);\r\n}\r\n\r\n// Using Open Prop's grid-adapt-mixin custom property for a easy, responsive grid layout that\r\n// will generate 3 columns automatically on large screens and adapt columns down on smaller screens.\r\n\r\n[data-grid=\"auto\"] {\r\n  grid-template-columns: var(--grid_adapt_mixin);\r\n}\r\n\r\n$grid-columns: 6;\r\n\r\n@for $i from 1 through $grid-columns {\r\n  [data-grid=\"#{$i}\"] {\r\n    grid-template-columns: repeat($i, 1fr);\r\n    @include breakpoint(max, small) {\r\n      grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\r\n    }\r\n    @include breakpoint(small, medium) {\r\n      grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\r\n    }\r\n  }\r\n}\r\n\r\n// 2 row x 2 column layout\r\n@for $i from 1 through $grid-columns {\r\n  [data-grid=\"2x#{$i}\"] {\r\n    grid-template-columns: repeat($i, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    @include breakpoint(max, small) {\r\n      grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\r\n    }\r\n    @include breakpoint(small, medium) {\r\n      grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\r\n    }\r\n  }\r\n}\r\n\r\n// 3 row x 2 column layout\r\n@for $i from 1 through $grid-columns {\r\n  [data-grid=\"3x#{$i}\"] {\r\n    grid-template-columns: repeat($i, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    @include breakpoint(max, small) {\r\n      grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\r\n    }\r\n    @include breakpoint(small, medium) {\r\n      grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\r\n    }\r\n  }\r\n}\r\n\r\n// 4 row x 2 column layout\r\n@for $i from 1 through $grid-columns {\r\n  [data-grid=\"4x#{$i}\"] {\r\n    grid-template-columns: repeat($i, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    @include breakpoint(max, small) {\r\n      grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\r\n    }\r\n    @include breakpoint(small, medium) {\r\n      grid-template-columns: repeat(auto-fill, minmax(32rem, 1fr));\r\n    }\r\n  }\r\n}\r\n\r\n[data-gutter=\"x\"] {\r\n  padding: 0 $space-phi;\r\n}\r\n\r\n[data-gutter=\"y\"] {\r\n  padding: calc(#{$space-e} / 2) 0;\r\n}\r\n\r\n[data-gutter=\"x/y\"] {\r\n  padding: calc(#{$space-e} / 2) $space-phi;\r\n}\r\n","// Grid\r\n$grid-columns: 12 !default; // Set number of columns in the grid\r\n\r\n// $xs-max: 40rem !default; // Set xs breakpoint's max width\r\n// $sm-max: 64rem !default; // Set sm breakpoint's max width\r\n// $md-max: 90rem !default; // Set md breakpoint's max width\r\n// $lg-max: 120rem !default; // Set lg breakpoint's max width\r\n\r\n$xs-max: 32rem !default;\r\n$sm-max: 48rem !default;\r\n$md-max: 64rem !default;\r\n$lg-max: 80rem !default;\r\n\r\n$gutter: 0 !default; // Set gutter size\r\n\r\n$content-well-max-width: \"none\" !default; // Set the max-width of the content well\r\n\r\n$sm-start: calc(#{$xs-max} + 1px); // Generate sm breakpoint's min width\r\n$md-start: calc(#{$sm-max} + 1px); // Generate md breakpoint's min width\r\n$lg-start: calc(#{$md-max} + 1px); // Generate lg breakpoint's min width\r\n$xl-start: calc(#{$lg-max} + 1px); // Generate xl breakpoint's min width\r\n\r\n// Breakpoints\r\n// Create breakpoint range statements to be used in media queries\r\n$breakpoint-xs-only: \"only screen and (max-width: #{$xs-max})\"; // 0 -> xs-max range\r\n$breakpoint-sm-up: \"only screen and (min-width: #{$sm-start})\"; // sm-start -> up range\r\n$breakpoint-sm-only: \"only screen and (min-width: #{$sm-start}) and (max-width: #{$sm-max})\"; // sm-start -> sm-max range\r\n$breakpoint-md-up: \"only screen and (min-width: #{$md-start})\"; // md-start -> up range\r\n$breakpoint-md-only: \"only screen and (min-width: #{$md-start}) and (max-width: #{$md-max})\"; // md-start -> md-max range\r\n$breakpoint-lg-up: \"only screen and (min-width: #{$lg-start})\"; // lg-start -> up range\r\n$breakpoint-lg-only: \"only screen and (min-width: #{$lg-start}) and (max-width: #{$lg-max})\"; // lg-start -> lg-max range\r\n$breakpoint-xl-up: \"only screen and (min-width: #{$xl-start})\"; // xl-start -> up range\r\n\r\n$breakpoints-all: ($breakpoint-xs-only, $breakpoint-sm-up, $breakpoint-sm-only, $breakpoint-md-up, $breakpoint-md-only, $breakpoint-lg-up, $breakpoint-lg-only, $breakpoint-xl-up);\r\n$breakpoint-ups: ($breakpoint-sm-up, $breakpoint-md-up, $breakpoint-lg-up, $breakpoint-xl-up);\r\n$breakpoint-all-prefixes: (\"xs\", \"xs-only\", \"sm\", \"sm-only\", \"md\", \"md-only\", \"lg\", \"lg-only\", \"xl\");\r\n$breakpoint-up-prefixes: (\"xs\", \"sm\", \"md\", \"lg\", \"xl\");\r\n\r\n@mixin row($wrap: wrap, $full-width: \"false\", $direction: row) {\r\n   box-sizing: border-box;\r\n   margin: 0 auto;\r\n   width: 100%;\r\n   display: -webkit-flex;\r\n   display: -ms-flexbox;\r\n   display: flex;\r\n   flex: 0 1 auto;\r\n   flex-direction: $direction;\r\n   flex-wrap: $wrap;\r\n   // // Overrides flexbox's default behavior of making all children equal height\r\n   // align-items: flex-start; // If this was not in place it would require two classes to make a row full of unequal height columns aligned top, middle, bottom\r\n   @if type-of($content-well-max-width) == number and $content-well-max-width != 0 and $full-width == \"false\"{\r\n      max-width: $content-well-max-width;\r\n   }\r\n}\r\n\r\n@mixin row-reverse() {\r\n   flex-direction: row-reverse;\r\n}\r\n\r\n@mixin row-natural-height() {\r\n   align-items: flex-start;\r\n}\r\n\r\n@mixin row-flex-column() {\r\n   flex-direction: column;\r\n}\r\n\r\n@mixin col-reverse() {\r\n   flex-direction: column-reverse;\r\n}\r\n\r\n// Condition to run inside of the col mixin * not for developer use *\r\n@mixin col-condition($col-number) {\r\n   @if type-of($col-number) == number {\r\n      @if $col-number > $grid-columns or $col-number == 0 {\r\n         @warn \"Column number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n      } @else {\r\n         box-sizing: border-box;\r\n         flex-basis: calc(100% / #{$grid-columns} * #{$col-number});\r\n         max-width: calc(100% / #{$grid-columns} * #{$col-number});\r\n         padding: $gutter;\r\n      }\r\n      // If no col number is passed then arg is set to \"auto\" by default\r\n      // \"auto\" mode fills the horizontal space with evenly sized containers\r\n   } @else if $col-number == \"auto\" {\r\n      box-sizing: border-box;\r\n      flex-grow: 1;\r\n      flex-basis: 0;\r\n      max-width: 100%;\r\n      padding: $gutter;\r\n   } @else {\r\n      @warn \"Column number argument must either be the string 'auto' or a number greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n   }\r\n} // Condition to run inside of the col mixin * not for developer use *\r\n\r\n@mixin col($breakpoint: \"xs\", $col-number: \"auto\") {\r\n   // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\r\n   @if type-of($breakpoint) == number {\r\n      $col-number: $breakpoint;\r\n      @include col-condition($col-number);\r\n   } @else if $breakpoint == \"xs\" {\r\n      @include col-condition($col-number);\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         @include col-condition($col-number);\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         @include col-condition($col-number);\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         @include col-condition($col-number);\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         @include col-condition($col-number);\r\n      }\r\n   } @else {\r\n      @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n// Condition to run inside of the col-offset mixin * not for developer use *\r\n@mixin col-offset-condition($offset-number) {\r\n   @if type-of($offset-number) != number {\r\n      @warn \"Column offset number must be a number (only arg or second arg in the col mixin)\";\r\n   } @else if $offset-number == 0 {\r\n      @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n   } @else if $offset-number > $grid-columns {\r\n      @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\r\n   } @else {\r\n      margin-left: 100% / $grid-columns * $offset-number;\r\n   }\r\n} // Condition to run inside of the col-offset mixin * not for developer use *\r\n\r\n@mixin col-offset($breakpoint: \"xs\", $offset-number: 0) {\r\n   // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\r\n   @if type-of($breakpoint) == number {\r\n      $offset-number: $breakpoint;\r\n      @include col-offset-condition($offset-number);\r\n   } @else if $breakpoint == \"xs\" {\r\n      @include col-offset-condition($offset-number);\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         @include col-offset-condition($offset-number);\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         @include col-offset-condition($offset-number);\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         @include col-offset-condition($offset-number);\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         @include col-offset-condition($offset-number);\r\n      }\r\n   } @else {\r\n      @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin start($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      justify-content: flex-start;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         justify-content: flex-start;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         justify-content: flex-start;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         justify-content: flex-start;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         justify-content: flex-start;\r\n      }\r\n   } @else {\r\n      @warn \"start mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin center($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      justify-content: center;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         justify-content: center;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         justify-content: center;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         justify-content: center;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         justify-content: center;\r\n      }\r\n   } @else {\r\n      @warn \"center mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin end($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      justify-content: flex-end;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         justify-content: flex-end;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         justify-content: flex-end;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         justify-content: flex-end;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         justify-content: flex-end;\r\n      }\r\n   } @else {\r\n      @warn \"end mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin top($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      align-items: flex-start;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         align-items: flex-start;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         align-items: flex-start;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         align-items: flex-start;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         align-items: flex-start;\r\n      }\r\n   } @else {\r\n      @warn \"top mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin middle($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      align-items: center;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         align-items: center;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         align-items: center;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         align-items: center;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         align-items: center;\r\n      }\r\n   } @else {\r\n      @warn \"middle mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin bottom($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      align-items: flex-end;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         align-items: flex-end;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         align-items: flex-end;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         align-items: flex-end;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         align-items: flex-end;\r\n      }\r\n   } @else {\r\n      @warn \"bottom mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin around($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      justify-content: space-around;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         justify-content: space-around;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         justify-content: space-around;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         justify-content: space-around;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         justify-content: space-around;\r\n      }\r\n   } @else {\r\n      @warn \"around mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin between($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      justify-content: space-between;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         justify-content: space-between;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         justify-content: space-between;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         justify-content: space-between;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         justify-content: space-between;\r\n      }\r\n   } @else {\r\n      @warn \"between mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin first($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      order: -1;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         order: -1;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         order: -1;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         order: -1;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         order: -1;\r\n      }\r\n   } @else {\r\n      @warn \"first mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin last($breakpoint: \"xs\") {\r\n   @if $breakpoint == \"xs\" {\r\n      order: 1;\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         order: 1;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         order: 1;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         order: 1;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         order: 1;\r\n      }\r\n   } @else {\r\n      @warn \"last mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin show($breakpoint, $row) {\r\n   @if $breakpoint == \"xs\" {\r\n      @if $row == \"true\" or $row == \"row\" {\r\n         display: flex;\r\n      } @else {\r\n         display: block;\r\n      }\r\n   } @else if $breakpoint == \"xs-only\" {\r\n      @media #{$breakpoint-xs-only} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"sm-only\" {\r\n      @media #{$breakpoint-sm-only} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"md-only\" {\r\n      @media #{$breakpoint-md-only} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"lg-only\" {\r\n      @media #{$breakpoint-lg-only} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         @if $row == \"true\" or $row == \"row\" {\r\n            display: flex;\r\n         } @else {\r\n            display: block;\r\n         }\r\n      }\r\n   } @else {\r\n      @warn \"show mixin arg must be one of the existing breakpoints or ranges (#{$breakpoint-all-prefixes})\";\r\n   }\r\n}\r\n\r\n@mixin hide($breakpoint) {\r\n   @if $breakpoint == \"xs\" {\r\n      display: none;\r\n   } @else if $breakpoint == \"xs-only\" {\r\n      @media #{$breakpoint-xs-only} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"sm\" {\r\n      @media #{$breakpoint-sm-up} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"sm-only\" {\r\n      @media #{$breakpoint-sm-only} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"md\" {\r\n      @media #{$breakpoint-md-up} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"md-only\" {\r\n      @media #{$breakpoint-md-only} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"lg\" {\r\n      @media #{$breakpoint-lg-up} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"lg-only\" {\r\n      @media #{$breakpoint-lg-only} {\r\n         display: none;\r\n      }\r\n   } @else if $breakpoint == \"xl\" {\r\n      @media #{$breakpoint-xl-up} {\r\n         display: none;\r\n      }\r\n   } @else {\r\n      @warn \"hide mixin arg must be one of the existing breakpoints or ranges (#{$breakpoint-all-prefixes})\";\r\n   }\r\n}\r\n","@keyframes gradient {\r\n  0% {\r\n     background-position: 0% 50%;\r\n  }\r\n  50% {\r\n     background-position: 100% 50%;\r\n  }\r\n  100% {\r\n     background-position: 0% 50%;\r\n  }\r\n}\r\n\r\n@keyframes moveDots {\r\n  from {\r\n     transform: rotate(0deg) scale(12) translateX(-20px);\r\n  }\r\n  to {\r\n     transform: rotate(360deg) scale(18) translateX(20px);\r\n  }\r\n}\r\n\r\n@keyframes textMorph3d {\r\n  0% {\r\n    text-shadow: 2px 2px 0px rgb(40 40 40 / 100%), 0px 0px 2px rgb(10 189 240 / 5%), 0px 0px 0px rgb(254 1 1 / 8%);\r\n  }\r\n  50% {\r\n    text-shadow: 2px 2px 0px rgb(40 40 40 / 100%), -5px -2px 0px rgb(10 189 240 / 10%), 4px 4px 1px rgb(254 1 1 / 15%);\r\n  }\r\n  100% {\r\n    text-shadow: 2px 2px 0px rgb(40 40 40 / 100%), 4px 3px 1px rgb(10 189 240 / 4%), -1px 3px 2px rgb(254 1 1 / 5%);\r\n  }\r\n}\r\n\r\n@keyframes hueRotator {\r\n  0% {\r\n    backdrop-filter: blur(0px) contrast(1) hue-rotate(0);\r\n  }\r\n  50% {\r\n    backdrop-filter: blur(3px) contrast(1.2) hue-rotate(180deg);\r\n  }\r\n  100% {\r\n    backdrop-filter: blur(0px) contrast(1) hue-rotate(0);\r\n  }\r\n}\r\n\r\n\r\n// Mobile Nav Burger Animation\r\n\r\n@keyframes line-top-in {\r\n  0% {\r\n    left: -5px;\r\n    bot: 0;\r\n    transform: rotate(-45deg);\r\n  }\r\n  20% {\r\n    left: -5px;\r\n    bot: 0;\r\n    transform: rotate(-60deg);\r\n  }\r\n  80% {\r\n    left: 0;\r\n    bot: 0;\r\n    transform: rotate(15deg);\r\n  }\r\n  100% {\r\n    left: 0;\r\n    bot: 1px;\r\n    transform: rotate(0deg);\r\n  }\r\n}\r\n\r\n@keyframes line-top-out {\r\n  0% {\r\n    left: 0;\r\n    top: 0;\r\n    transform: rotate(0deg);\r\n  }\r\n  20% {\r\n    left: 0;\r\n    top: 0;\r\n    transform: rotate(15deg);\r\n  }\r\n  80% {\r\n    left: -5px;\r\n    top: 0;\r\n    transform: rotate(-60deg);\r\n  }\r\n  100% {\r\n    left: -5px;\r\n    top: 1px;\r\n    transform: rotate(-45deg);\r\n  }\r\n}\r\n\r\n@keyframes line-bot-in {\r\n  0% {\r\n    left: -5px;\r\n    transform: rotate(45deg);\r\n  }\r\n  20% {\r\n    left: -5px;\r\n    bot: 0;\r\n    transform: rotate(60deg);\r\n  }\r\n  80% {\r\n    left: 0;\r\n    bot: 0;\r\n    transform: rotate(-15deg);\r\n  }\r\n  100% {\r\n    left: 0;\r\n    transform: rotate(0deg);\r\n  }\r\n}\r\n\r\n@keyframes line-bot-out {\r\n  0% {\r\n    left: 0;\r\n    transform: rotate(0deg);\r\n  }\r\n  20% {\r\n    left: 0;\r\n    transform: rotate(-15deg);\r\n  }\r\n  80% {\r\n    left: -5px;\r\n    transform: rotate(60deg);\r\n  }\r\n  100% {\r\n    left: -5px;\r\n    transform: rotate(45deg);\r\n  }\r\n}\r\n",".hidden,\r\n.visuallyhidden,\r\n.hide {\r\n  display: none;\r\n  visibility: hidden;\r\n  backface-visibility: hidden;\r\n  border: 0;\r\n\theight: 1px;\r\n\tmargin: -1px;\r\n\toverflow: hidden;\r\n\tpadding: 0;\r\n\tposition: absolute;\r\n\twidth: 1px;\r\n}\r\n\r\n.pointer {\r\n\tcursor: pointer;\r\n}\r\n\r\n.clearfix:after {\r\n\tcontent: \"\";\r\n\tdisplay: table;\r\n\tclear: both;\r\n}\r\n\r\n.rgb-overlay {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background: rgba(slate(5), 0.3);\r\n  mix-blend-mode: color-burn;\r\n  animation-name: hueRotator;\r\n  animation-duration: 8s;\r\n  animation-timing-function: ease-in-out;\r\n  animation-fill-mode: both;\r\n  animation-iteration-count: infinite;\r\n}\r\n","/* Remove all animations and transitions for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n\t* {\r\n\t\t animation-duration: 0.01ms !important;\r\n\t\t animation-iteration-count: 1 !important;\r\n\t\t transition-duration: 0.01ms !important;\r\n\t\t scroll-behavior: auto !important;\r\n\t}\r\n}\r\n\r\nhtml {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-x: hidden;\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  font-size: 118.2%;\r\n}\r\n\r\nbody {\r\n  color: var(--color-text);\r\n  font-size: var(--base);\r\n  font-family: $text-font;\r\n  font-weight: $text-weight;\r\n  background-image: var(--color-background);\r\n  background-size: 200%;\r\n  background-attachment: fixed;\r\n  text-rendering: optimizeLegibility;\r\n  -webkit-text-size-adjust: 100%;\r\n  font-feature-settings: \"kern\" 1;\r\n  font-kerning: normal;\r\n  scroll-behavior: smooth;\r\n\t@apply flex flex-col w-full h-full relative;\r\n}\r\n\r\nhtml.trans,\r\nhtml.trans *,\r\nhtml.trans *:before,\r\nhtml.trans *:after {\r\n  transition: all 750ms !important;\r\n  transition-delay: 0 !important;\r\n}\r\n\r\na {\r\n  position: relative;\r\n  color: var(--color-link);\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  transition: all 300ms ease;\r\n  &:hover,\r\n  &:focus {\r\n    color: var(--color-link-hover);\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n  }\r\n}\r\n\r\nmain {\r\n  @apply relative w-full h-full bg-white;\r\n}\r\n\r\n.container {\r\n  @apply px-2;\r\n  @include adaptive($space);\r\n}\r\n","// Init Sass Color Functions\r\n@import \"toolkit/open-color\",\r\n        \"toolkit/palettes\",\r\n        \"~nord/src/sass/nord\",\r\n        \"toolkit/gradients\";\r\n\r\n//\r\n// Using Gorko to generate color theme properties based on some variable maps\r\n// for a primary theme (light colors) and a dark mode theme (dark colors)\r\n//\r\n\r\n$generate-utility-classes: false;\r\n// ^ Tell Gorko not to auto-generate utility classes, we can do that as needed\r\n// ------\r\n\r\n\r\n// Color map for \"Light / Primary\" color theme\r\n$light-colors: (\r\n  'primary': #1a1a1a,\r\n  'secondary': #f3f3f3,\r\n  'text': ocGray(9),\r\n  'body': slate(1),\r\n  'background': gradient(metallic-fade),\r\n  'heading': $nord2,\r\n  'subheading': slate(5),\r\n  'accent': $nord7,\r\n  'descent': $nord3,\r\n  'mid': slate(5),\r\n  'alt': ocGray(5),\r\n  'link': ocGray(8),\r\n  'link-hover': slate(6)\r\n);\r\n\r\n// Color map for \"Dark / Alternate\" color theme (inverse contrast to light theme)\r\n$dark-colors: (\r\n  'primary': slate(2),\r\n  'secondary': #040405,\r\n  'text': ocGray(1),\r\n  'body': slate(9),\r\n  'background': gradient(dark-fade),\r\n  'heading': $nord6,\r\n  'subheading': $nord3,\r\n  'accent': $nord3,\r\n  'descent': $nord7,\r\n  'mid': slate(5),\r\n  'alt': ocGray(5),\r\n  'link': $nord7,\r\n  'link-hover': slate(4)\r\n);\r\n\r\n// Configuration to initialize Gorko to generate theme properties\r\n$gorko-config: (\r\n  'css-vars': (\r\n    'themes': (\r\n      'default': (\r\n        'tokens': (\r\n          'color': $light-colors\r\n        )\r\n      ),\r\n//    'dark': (\r\n//      'prefers-color-scheme': 'dark',\r\n//      'tokens': (\r\n//        'color': $dark-colors\r\n//      )\r\n//    ),\r\n      'light': (\r\n        'prefix': '.theme-light',\r\n        'tokens': (\r\n          'color': $light-colors\r\n        )\r\n      ),\r\n      'dark-toggle': (\r\n        'prefix': 'theme-dark',\r\n        'tokens': (\r\n          'color': $dark-colors\r\n        )\r\n      )\r\n    )\r\n  )\r\n);\r\n\r\n// Init Gorko\r\n@import \"~gorko/gorko\";\r\n\r\n// Set breakpoints used by Gerillass breakpoint mixin\r\n$map-for-breakpoints: (\r\n  \"xsmall\":   32rem,   // 512px\r\n  \"small\":    48rem,   // 768px\r\n  \"medium\":   64rem,   // 1024px\r\n  \"large\":    80rem,   // 1280px\r\n  \"xlarge\":   90rem   // 1440px\r\n  // \"2xlarge\":  112.5rem // 1800px\r\n);\r\n\r\n// Selected custom properties from Open Props\r\n@import \"~open-props/gradients\";\r\n@import \"~open-props/borders\";\r\n@import \"~open-props/shadows\";\r\n\r\n// My own custom properties generated by Accoutrement\r\n@import \"toolkit/fluid-sizes\";\r\n@import \"toolkit/social-colors\";\r\n@import \"toolkit/easing\";\r\n\r\n$content-width:       map-get($map-for-breakpoints, xlarge);\r\n\r\n// Porting CSS custom props into Sass variables for easier typing shorthand\r\n$phi:                 var(--phi);\r\n$e:                   var(--e);\r\n$pi:                  var(--pi);\r\n$space:               var(--space-phi);\r\n$space-phi:           var(--space-phi);\r\n$space-e:             var(--space-e);\r\n$space-pi:            var(--space-pi);\r\n\r\n$p:                   var(--p);\r\n$sm:                  var(--sm);\r\n$md:                  var(--md);\r\n$lg:                  var(--lg);\r\n$xl:                  var(--xl);\r\n$xxl:                 var(--xxl);\r\n$xxxl:                var(--xxxl);\r\n$xxxxl:               var(--xxxxl);\r\n\r\n$h1:                  var(--h1);\r\n$h2:                  var(--h2);\r\n$h3:                  var(--h3);\r\n$h4:                  var(--h4);\r\n$h5:                  var(--h5);\r\n$h6:                  var(--h6);\r\n\r\n// Some Sass variables to call up fonts imported into \"/scss/toolkit/fonts\"\r\n$barlow:             'Barlow', sans-serif;\r\n$genos:              'Genos', sans-serif;\r\n$kanit:              'Kanit', sans-serif;\r\n\r\n$text-font:           $barlow;\r\n$text-line:           1.618rem;\r\n$text-weight:         300;\r\n$heading-font:        $genos;\r\n$heading-weight:      500;\r\n","@charset \"UTF-8\";\n\n@mixin adaptive($gutter: 30px) {\n  $actual-breakpoints: map-remove($map-for-breakpoints, \"xsmall\");\n  margin: 0 auto;\n  @each $item, $value in $actual-breakpoints {\n    @media (min-width: #{$value}) {\n      max-width: calc(#{$value} - (#{$gutter} * 2));\n    }\n  }\n}\n","img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  display: inline-block;\r\n}\r\n\r\nfigure {\r\n  display: block;\r\n  position: relative;\r\n}\r\n","h1, h2, h3, h4, h5, h6 {\r\n\tfont-family: $heading-font;\r\n\tfont-weight: $heading-weight;\r\n\tline-height: 1;\r\n\tmargin-top: clamp(#{$phi}rem, 3.14vw, #{$pi}rem);\r\n\tmargin-bottom: clamp(0.618rem, 1.618vw, 1.618rem);\r\n\tcolor: var(--color-heading);\r\n\ttransition: all 200ms ease;\r\n\t@include only(first) {\r\n\t\tmargin-top: 0;\r\n\t}\r\n}\r\n\r\n.sub {\r\n  color: var(--color-subheading);\r\n  position: relative;\r\n  top: -2.5vw;\r\n  margin-left: 2vw;\r\n}\r\n\r\nh1 {\r\n  font-size: $h1;\r\n\tletter-spacing: -0.1vw;\r\n\tmargin-top: 0;\r\n}\r\n\r\nh2 {\r\n\tfont-size: $h2;\r\n\tletter-spacing: -0.075vw;\r\n}\r\n\r\nh3 {\r\n\tfont-size: $h3;\r\n\tletter-spacing: -0.05vw;\r\n}\r\n\r\nh4 {\r\n\tfont-size: $h4;\r\n\tletter-spacing: -0.025vw;\r\n}\r\n\r\nh5 {\r\n\tfont-size: $h5;\r\n}\r\n\r\nh6 {\r\n  font-size: $h6;\r\n}\r\n\r\nsmall,\r\n.text-small {\r\n\tfont-size: 0.618rem;\r\n\tline-height: 1.5;\r\n\tletter-spacing: 0.0618rem;\r\n}\r\n\r\np {\r\n   font-size: $p;\r\n   line-height: $text-line;\r\n   margin: calc(var(--space-phi) * 0.75) 0 calc(var(--space-phi) * 0.75);\r\n   @include except(first) {\r\n      margin-top: 0;\r\n   }\r\n}\r\n\r\nb, strong {\r\n  font-weight: 700;\r\n}\r\n","@charset \"UTF-8\";\n\n@mixin only($params...) {\n  @if length($params) == 0 {\n    @error \"Please pass an argument. The argument must be either a negative or positive number or list of numbers. Or pass one of the following predefined string values: 'first', 'last', 'odd', 'even'.\";\n  } @else if length($params) == 1 {\n    $value: nth($params, 1);\n    @if type-of($value) == \"number\" {\n      @if $value < 0 {\n        &:nth-last-of-type(#{$value * -1}) {\n          @content;\n        }\n      } @else {\n        &:nth-of-type(#{$value}) {\n          @content;\n        }\n      }\n    } @else if type-of($value) == \"string\" {\n      @if $value == \"odd\" {\n        &:nth-of-type(odd) {\n          @content;\n        }\n      } @else if $value == \"even\" {\n        &:nth-of-type(even) {\n          @content;\n        }\n      } @else if $value == \"first\" {\n        &:first-of-type {\n          @content;\n        }\n      } @else if $value == \"last\" {\n        &:last-of-type {\n          @content;\n        }\n      } @else {\n        // For class, id or attribute selectors.\n        &#{$value} {\n          @content;\n        }\n      }\n    }\n  } @else if length($params) > 1 {\n    $list: ();\n    @for $i from 1 through length($params) {\n      $list: append($list, if(nth($params, $i) < 0, unquote(\"&:nth-last-of-type(#{nth($params, $i) * -1})\"), unquote(\"&:nth-of-type(#{nth($params, $i)})\")), comma);\n    }\n    #{$list} {\n      @content;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n@mixin except($params...) {\n  @if length($params) == 0 {\n    @error \"Please pass an argument. The argument must be either a negative or positive number or list of numbers. Or pass one of the following predefined string values: 'first', 'last', 'odd', 'even'.\";\n  } @else if length($params) == 1 {\n    $value: nth($params, 1);\n    @if type-of($value) == \"number\" {\n      @if $value < 0 {\n        &:not(:nth-last-of-type(#{$value * -1})) {\n          @content;\n        }\n      } @else {\n        &:not(:nth-of-type(#{$value})) {\n          @content;\n        }\n      }\n    } @else if type-of($value) == \"string\" {\n      @if $value == \"odd\" {\n        &:not(:nth-of-type(odd)) {\n          @content;\n        }\n      } @else if $value == \"even\" {\n        &:not(:nth-of-type(even)) {\n          @content;\n        }\n      } @else if $value == \"first\" {\n        &:not(:first-of-type) {\n          @content;\n        }\n      } @else if $value == \"last\" {\n        &:not(:last-of-type) {\n          @content;\n        }\n      } @else {\n        &:not(#{$value}) {\n          @content;\n        }\n      }\n    }\n  } @else if length($params) > 1 {\n    $items: \"\";\n    @for $i from 1 through length($params) {\n      $items: $items + if(nth($params, $i) < 0, unquote(\":not(:nth-last-of-type(#{nth($params, $i) * -1}))\"), unquote(\":not(:nth-of-type(#{nth($params, $i)}))\"));\n    }\n    &#{$items} {\n      @content;\n    }\n  }\n}\n",":where(html) {\r\n  --icon-size: var(--lg);\r\n}\r\n\r\ni, .icon {\r\n  @apply inline-flex justify-center items-center align-middle;\r\n  @include sizer(var(--icon-size));\r\n  transition: all 300ms ease;\r\n  &:hover {\r\n    filter: brightness(1.5);\r\n  }\r\n  svg {\r\n    @apply w-full h-full object-fill;\r\n  }\r\n}\r\n\r\n.i\\:h1 { --icon-size: #{$h1}; }\r\n.i\\:h2 { --icon-size: #{$h2}; }\r\n.i\\:h3 { --icon-size: #{$h3}; }\r\n.i\\:h4 { --icon-size: #{$h4}; }\r\n.i\\:h5 { --icon-size: #{$h5}; }\r\n.i\\:xl { --icon-size: #{$xl}; }\r\n.i\\:lg { --icon-size: #{$lg}; }\r\n.i\\:md { --icon-size: #{$md}; }\r\n.i\\:sm { --icon-size: #{$sm}; }\r\n.i\\:p  { --icon-size: #{$p};  }\r\n.i\\:100 { --icon-size: 100%; }\r\n","@charset \"UTF-8\";\n\n@mixin sizer($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n",".header {\r\n  @apply relative w-full py-8;\r\n  .container {\r\n    @apply flex items-center;\r\n  }\r\n  .title {\r\n    @apply flex-none;\r\n    &__name {\r\n      font-size: $xxxl;\r\n      text-transform: uppercase;\r\n      a {\r\n        color: $nord10;\r\n      }\r\n    }\r\n  }\r\n  .navbar {\r\n    @apply flex-1;\r\n    .menu {\r\n      @apply flex flex-1 w-full justify-end pr-10;\r\n      ul {\r\n        @apply flex items-center justify-end gap-10;\r\n        li {\r\n          a {\r\n            font-size: $lg;\r\n            font-family: $genos;\r\n            font-weight: 500;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// \n// ++++++++++++++++++++++++++++++++++++++++++++++++++++\n// title      Nord                                    +\n// project    nord                                    +\n// version    0.2.0                                   +\n// repository https://github.com/arcticicestudio/nord +\n// author     Arctic Ice Studio                       +\n// email      development@arcticicestudio.com         +\n// copyright  Copyright (C) 2016                      +\n// ++++++++++++++++++++++++++++++++++++++++++++++++++++\n// \n// [References]\n// Sass\n//   (http://sass-lang.com)\n// SassDoc\n//   (http://sassdoc.com)\n\n////\n/// A arctic, north-bluish color palette.\n/// Created for the clean- and minimal flat design pattern to achieve a optimal focus and readability for code syntax\n/// highlighting and UI.  \n/// It consists of a total of sixteen, carefully selected, dimmed pastel colors for a eye-comfortable, but yet colorful\n/// ambiance.\n///\n/// @author Arctic Ice Studio <development@arcticicestudio.com>\n////\n\n/// Base component color of \"Polar Night\".\n///\n/// Used for texts, backgrounds, carets and structuring characters like curly- and square brackets.\n///\n/// @access public\n/// @example scss - SCSS\n///   /* For dark ambiance themes */\n///   .background {\n///     background-color: $nord0;\n///   }\n///   /* For light ambiance themes */\n///   .text {\n///     color: $nord0;\n///   }\n/// @group polarnight\n/// @since 0.1.0\n$nord0: #2E3440;\n\n/// Lighter shade color of the base component color.\n///\n/// Used as a lighter background color for UI elements like status bars.\n///\n/// @access public\n/// @group polarnight\n/// @see $nord0\n/// @since 0.1.0\n$nord1: #3B4252;\n\n/// Lighter shade color of the base component color.\n///\n/// Used as line highlighting in the editor.  \n/// In the UI scope it may be used as selection- and hightlight color.\n///\n/// @access public\n/// @example scss - SCSS\n///   /* Code Syntax Highlighting scope */\n///   .editor {\n///     &.line {\n///       background-color: $nord2;\n///     }\n///   }\n///\n///   /* UI scope */\n///   button {\n///     &:selected {\n///       background-color: $nord2;\n///     }\n///   }\n/// @group polarnight\n/// @see $nord0\n/// @since 0.1.0\n$nord2: #434C5E;\n\n/// Lighter shade color of the base component color.\n///\n/// Used for comments, invisibles, indent- and wrap guide marker.  \n/// In the UI scope used as pseudoclass color for disabled elements.\n///\n/// @access public\n/// @example scss - SCSS\n///   /* Code Syntax Highlighting scope */\n///   .editor {\n///     &.indent-guide,\n///     &.wrap-guide {\n///       &.marker {\n///         color: $nord3;\n///       }\n///     }\n///   }\n///   .comment,\n///   .invisible {\n///     color: $nord3;\n///   }\n///\n///   /* UI scope */\n///   button {\n///     &:disabled {\n///       background-color: $nord3;\n///     }\n///   }\n/// @group polarnight\n/// @see $nord0\n/// @since 0.1.0\n$nord3: #4C566A;\n\n/// Base component color of \"Snow Storm\".\n///\n/// Main color for text, variables, constants and attributes.\n/// In the UI scope used as semi-light background depending on the theme shading design.\n///\n/// @access public\n/// @example scss - SCSS\n///   /* For light ambiance themes */\n///   .background {\n///     background-color: $nord4;\n///   }\n///   /* For dark ambiance themes */\n///   .text {\n///     color: $nord4;\n///   }\n/// @group snowstorm\n/// @since 0.1.0\n$nord4: #D8DEE9;\n\n/// Lighter shade color of the base component color.\n///\n/// Used as a lighter background color for UI elements like status bars.  \n/// Used as semi-light background depending on the theme shading design.\n///\n/// @access public\n/// @group snowstorm\n/// @see $nord4\n/// @since 0.1.0\n$nord5: #E5E9F0;\n\n/// Lighter shade color of the base component color.\n///\n/// Used for punctuations, carets and structuring characters like curly- and square brackets.  \n/// In the UI scope used as background, selection- and hightlight color depending on the theme shading design.\n///\n/// @access public\n/// @group snowstorm\n/// @see $nord4\n/// @since 0.1.0\n$nord6: #ECEFF4;\n\n/// Bluish core color.\n///\n/// Used for classes, types and documentation tags.\n///\n/// @access public\n/// @group frost\n/// @since 0.1.0\n$nord7:  #8FBCBB;\n\n/// Bluish core accent color.\n///\n/// Represents the accent color of the color palette.  \n/// Main color for primary UI elements and methods/functions.  \n///\n/// Can be used for\n///   - Markup quotes\n///   - Markup link URLs\n///\n/// @access public\n/// @group frost\n/// @since 0.1.0\n$nord8:  #88C0D0;\n\n/// Bluish core color.\n///\n/// Used for language-specific syntactic/reserved support characters and keywords, operators, tags, units and\n/// punctuations like (semi)colons,commas and braces.\n///\n/// @access public\n/// @group frost\n/// @since 0.1.0\n$nord9:  #81A1C1;\n\n/// Bluish core color.\n///\n/// Used for markup doctypes, import/include/require statements, pre-processor statements and at-rules (`@`).\n///\n/// @access public\n/// @group frost\n/// @since 0.1.0\n$nord10: #5E81AC;\n\n/// Colorful component color.\n///\n/// Used for errors, git/diff deletion and linter marker.\n///\n/// @access public\n/// @group aurora\n/// @since 0.1.0\n$nord11: #BF616A;\n\n/// Colorful component color.\n///\n/// Used for annotations.\n///\n/// @access public\n/// @group aurora\n/// @since 0.1.0\n$nord12: #D08770;\n\n/// Colorful component color.\n///\n/// Used for escape characters, regular expressions and markup entities.  \n/// In the UI scope used for warnings and git/diff renamings.\n///\n/// @access public\n/// @group aurora\n/// @since 0.1.0\n$nord13: #EBCB8B;\n\n/// Colorful component color.\n///\n/// Main color for strings and attribute values.  \n/// In the UI scope used for git/diff additions and success visualizations.\n///\n/// @access public\n/// @group aurora\n/// @since 0.1.0\n$nord14: #A3BE8C;\n\n/// Colorful component color.\n///\n/// Used for numbers.\n///\n/// @access public\n/// @group aurora\n/// @since 0.1.0\n$nord15: #B48EAD;\n",".footer {\r\n  @apply relative flex pt-6 pb-12 border-t border-slate-400/20;\r\n  background-color: rgba(black, 0.25);\r\n  .container {\r\n    @apply relative flex items-start justify-start;\r\n    @include adaptive($space);\r\n  }\r\n  &__info {\r\n    @apply flex-auto justify-start;\r\n  }\r\n  &__social {\r\n    @apply flex-1 flex justify-end;\r\n    nav {\r\n      margin-right: 1rem;\r\n      ul {\r\n        @apply flex flex-col justify-center gap-4;\r\n        li {\r\n          @apply flex items-end justify-end text-right;\r\n          a {\r\n            i {\r\n              --icon-size: var(--md);\r\n              vertical-align: text-bottom;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",".content {\r\n  @apply relative flex flex-col w-full h-full m-0;\r\n  padding-top: $space;\r\n  padding-bottom: $space;\r\n\r\n  figure {\r\n    @apply border border-slate-700/40 hover:border-slate-500/80;\r\n    figcaption {\r\n      @apply absolute bottom-0 left-0 w-full px-4 py-4 opacity-50 backdrop-blur-md shadow-xl shadow-black;\r\n      background-color: slate(9);\r\n      color: var(--color-accent);\r\n      transition: all 300ms ease-in-out;\r\n    }\r\n    &:hover {\r\n      figcaption {\r\n        @apply opacity-80;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}